{"version":3,"sources":["img/undraw_doctor_kw5l.svg","img/coughing_2.svg","img/doctor8.svg","img/newDoctor1.svg","img/undraw_forms_78yw.svg","img/Noprofile.gif","img/graduation.svg","img/undraw_medical_research_qg4d.svg","img/doctor4.svg","img/calendar.svg","components/layout/Alert.js","actions/alert.js","utils/setAuthToken.js","actions/authUser.js","actions/types.js","actions/authDoctor.js","components/layout/Navbar.js","topbar/topbar.js","components/layout/Landing.js","components/auth/LoginUser.js","components/auth/LoginDoctor.js","components/auth/DoctorRegister.js","components/auth/UserRegister.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Patient.js","components/dashboard/Graph.js","components/dashboard/Review.js","components/dashboard/Dashboard.js","components/profile-forms/AddEducation.js","components/profile-forms/AddExperience.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileReview.js","components/profile/ReviewForm.js","actions/review.js","components/profile/Profile.js","components/routing/PrivateDoctorRoute.js","components/user/AppointmentItems.js","actions/appointment.js","components/user/Appointments.js","components/bookappointment/Form.js","components/bookappointment/AppointmentForm.js","components/routing/PrivateUserRoute.js","reducers/alert.js","reducers/authDoctor.js","reducers/authUser.js","reducers/profile.js","reducers/appointment.js","reducers/index.js","store.js","App.js","index.js","components/layout/doctor (1).png","img/mention.svg","img/preloader.gif"],"names":["module","exports","connect","state","alerts","alert","length","map","key","id","className","alertType","msg","setAlert","dispatch","Store","addNotification","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","payload","data","loadDoctor","authUser","authDoctor","logout_user","logout_doctor","isUserAuthenticated","loadingUser","user","isDoctorAuthenticated","loadingDoctor","doctor","authUserLinks","to","style","color","width","src","require","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","href","authDoctorLinks","aria-haspopup","aria-labelledby","guestLinks","DarkTopLoaderBar","topbar","config","autoRun","barThickness","barColors","shadowBlur","shadowColor","show","hide","login","email","password","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","for","placeholder","required","minLength","alt","register","password2","title","rel","preloder","getCurrentProfile","statusText","status","getProfileById","doctorId","createProfile","history","edit","push","deleteExperience","exp_id","delete","experience","experiences","exp","medical","position","format","from","_id","class","deleteEducation","edu_id","education","educations","edu","school","degree","patient","setValue","modalBody","pat","patientname","fathername","age","date","bookingId","patients","ptn","role","aria-hidden","data-dismiss","modal","props","children","description","Graph","chartData","setChartData","useEffect","patientData","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","Date","getMonth","janData","reduce","b","febData","marData","aprData","mayData","junData","julData","augData","sepData","octData","novData","decData","labels","datasets","label","borderColor","pointBorderColor","borderWidth","chart","options","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","review","reviews","rev","avatar","profile","deleteAccount","window","confirm","loading","Spinner","addEducation","put","withRouter","fieldofstudy","current","setFormdata","toDateDisabled","toggleDisabled","height","checked","disabled","addExperience","location","clinic","website","specialists","ruppess","timing","bio","twitter","facebook","youtube","instagram","displySocialInputs","toggleSocialInputs","social","classNameName","data-placement","getProfiles","profiles","ProfileTop","ProfileAbout","split","ProfileExperience","ProfileEducation","deleteReview","reviewId","addReview","setText","cols","rows","profileById","match","params","Component","component","rest","render","deleteAppointment","appointmentId","appointment","appointments","appnt","getAppointments","deleteAccountUser","toLocaleUpperCase","justifyContent","addAppointment","initialState","getItem","initalState","combineReducers","action","filter","setItem","removeItem","comment","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","LoginUser","LoginDoctor","DoctorRegister","UserRegister","Profiles","Profile","Dashboard","AddEducation","AddExperience","CreateProfile","EditProfile","Appointment","AppointmentForm","ReactDOM","StrictMode","document","getElementById"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,4GCkB5BC,eAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,SAGHH,EAdD,SAAC,GAAD,IAAGE,EAAH,EAAGA,OAAH,OAA2B,OAAXA,GAAmBA,EAAOE,OAAS,GAAKF,EAAOG,KAAI,SAAAF,GAAK,OAClF,yBAAKG,IAAKH,EAAMI,GAAIC,UAAS,sBAAiBL,EAAMM,YAC/CN,EAAMO,W,+CCDFC,EAAW,SAACD,EAAKD,GAAN,OAAkC,SAAAG,GAItDC,QAAMC,gBAAgB,CAEnBC,QAAQ,GAAD,OAAKL,GACZM,KAAK,GAAD,OAAKP,GACTQ,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,OCTJC,EARM,SAAAC,GACdA,EACCC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCShCC,EAAW,yDAAM,WAAMlB,GAAN,eAAAmB,EAAA,6DACvBC,aAAaP,OACZD,EAAaQ,aAAaP,OAFJ,kBAMJC,IAAMO,IAAI,iBANN,OAMhBC,EANgB,OAQtBtB,EAAS,CACLI,KCFe,cDGfmB,QAASD,EAAIE,OAVK,gDAatBxB,EAAS,CACLI,KCNmB,oBDRD,yDAAN,uDEAXqB,EAAa,yDAAM,WAAMzB,GAAN,eAAAmB,EAAA,6DACzBC,aAAaP,OACZD,EAAaQ,aAAaP,OAFF,kBAMNC,IAAMO,IAAI,mBANJ,OAMlBC,EANkB,OAQxBtB,EAAS,CACLI,KDlBiB,gBCmBjBmB,QAASD,EAAIE,OAVO,gDAaxBxB,EAAS,CACLI,KDtBqB,sBCQD,yDAAN,uDCiOXhB,G,MAAAA,aALS,SAACC,GAAD,MAAY,CAClCqC,SAAUrC,EAAMqC,SAChBC,WAAYtC,EAAMsC,cAGoB,CAAEC,YHrJf,kBAAM,SAAA5B,GAE/BA,EAASD,EAAS,qBAAsB,YAEtCC,EAAS,CACLI,KC9D0B,uBDgE9BJ,EAAS,CACLI,KCzEmB,kBEsN4ByB,cDpJ1B,kBAAM,SAAA7B,GAC/BA,EAASD,EAAS,qBAAsB,YACxCC,EAAS,CACLI,KDhFqB,kBCkFzBJ,EAAS,CACLI,KDxFqB,qBEsOdhB,EAvOA,SAAC,GAKT,IAAD,IAJJsC,SAAYI,EAIR,EAJQA,oBAAqBC,EAI7B,EAJ6BA,YACjCH,GAGI,EAJ0CI,KAI1C,EAHJJ,aAGI,IAFJD,WAAcM,EAEV,EAFUA,sBACdJ,GACI,EAFiCK,cAEjC,EAFgDC,OAEhD,EADJN,eAEMO,EACJ,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMxC,UAAU,WAAWyC,GAAG,eAAeC,MAAO,CAACC,MAAO,YAC3D,uBAAGD,MAAO,CAACC,MAAO,YAAlB,cACC,yBACE3C,UAAU,cACV0C,MAAO,CAAEE,MAAO,UAChBC,IAAKC,EAAQ,OAGjB,4BACE9C,UAAU,iBACVQ,KAAK,SACLuC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMnD,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BD,GAAG,aAC3C,wBAAIC,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMyC,GAAG,YAAYzC,UAAU,YAA/B,YAIF,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMyC,GAAG,eAAezC,UAAU,aAAlC,iBAIF,wBAAIA,UAAU,mBACZ,uBACEA,UAAU,8BACVoD,QAASpB,EACTqB,KAAK,IAEL,uBAAGrD,UAAU,wBALf,IAKwC,6CAO5CsD,EACJ,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMtD,UAAU,WAAWyC,GAAG,aAAaC,MAAO,CAACC,MAAO,YAA1D,UAEE,yBACE3C,UAAU,cACV0C,MAAO,CAAEE,MAAO,UAChBC,IAAKC,EAAQ,OAGjB,4BACE9C,UAAU,iBACVQ,KAAK,SACLuC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMnD,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BD,GAAG,aAC3C,wBAAIC,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMyC,GAAG,aAAazC,UAAU,aAAhC,cAIF,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMyC,GAAG,YAAYzC,UAAU,YAA/B,YAIF,wBAAIA,UAAU,4BACZ,kBAAC,IAAD,CACEA,UAAU,2BACVD,GAAG,yBACHgD,cAAY,WACZQ,gBAAc,OACdL,gBAAc,SALhB,kBASA,yBACElD,UAAU,gBACVwD,kBAAgB,0BAEhB,kBAAC,IAAD,CAAMxD,UAAU,gBAAgByC,GAAG,iBACjC,uBAAGzC,UAAU,mBADf,iBAGA,kBAAC,IAAD,CAAMA,UAAU,gBAAgByC,GAAG,kBACjC,uBAAGzC,UAAU,sBADf,kBAGA,kBAAC,IAAD,CAAMA,UAAU,gBAAgByC,GAAG,mBAChC,IACD,uBAAGzC,UAAU,qBAFf,qBAMJ,wBAAIA,UAAU,mBACZ,uBACEA,UAAU,8BACVoD,QAASnB,EACToB,KAAK,IAEL,uBAAGrD,UAAU,wBALf,IAKwC,6CAO5CyD,EACJ,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMzD,UAAU,WAAWyC,GAAG,KAA9B,UAEE,yBACEzC,UAAU,cACV0C,MAAO,CAAEE,MAAO,UAChBC,IAAKC,EAAQ,OAGjB,4BACE9C,UAAU,iBACVQ,KAAK,SACLuC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMnD,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BD,GAAG,aAC3C,wBAAIC,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMyC,GAAG,YAAYzC,UAAU,YAA/B,YAIF,wBAAIA,UAAU,4BACZ,kBAAC,IAAD,CACEA,UAAU,2BACVD,GAAG,yBACHgD,cAAY,WACZQ,gBAAc,OACdL,gBAAc,SALhB,UASA,yBACElD,UAAU,gBACVwD,kBAAgB,0BAEhB,kBAAC,IAAD,CAAMxD,UAAU,gBAAgByC,GAAG,cACjC,uBAAGzC,UAAU,iBADf,kBAGA,kBAAC,IAAD,CAAMA,UAAU,gBAAgByC,GAAG,gBACjC,uBAAGzC,UAAU,mBADf,sBAKJ,wBAAIA,UAAU,4BACZ,kBAAC,IAAD,CACEA,UAAU,2BACVD,GAAG,yBACHgD,cAAY,WACZQ,gBAAc,OACdL,gBAAc,SALhB,YASA,yBACElD,UAAU,gBACVwD,kBAAgB,0BAEhB,kBAAC,IAAD,CAAMxD,UAAU,gBAAgByC,GAAG,iBACjC,uBAAGzC,UAAU,iBADf,qBAGA,kBAAC,IAAD,CAAMA,UAAU,gBAAgByC,GAAG,mBACjC,uBAAGzC,UAAU,mBADf,4BAUZ,OACE,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,aACZkC,GAAuBG,EACtB,kBAAC,WAAD,MACIF,GACA,kBAAC,WAAD,KACGD,EAAsBM,EAAgBc,IAK7CG,Q,gBC3MKC,EAjBU,WAErBC,IAAOC,OAAO,CACVC,SAAe,EACfC,aAAe,EACfC,UAAe,CACX,EAAW,UACX,MAAW,UACX,MAAW,UACX,MAAW,UACX,MAAW,WAEdC,WAAe,EAChBC,YAAe,6BCwERzE,eALS,SAACC,GAAD,MAAY,CAClC4C,sBAAuB5C,EAAMsC,WAAWM,sBACxCH,oBAAqBzC,EAAMqC,SAASI,uBAGvB1C,EA7EC,SAAC,GAAoD,IAAlD6C,EAAiD,EAAjDA,sBAAuBH,EAA0B,EAA1BA,oBAGxC,OAFFwB,IAEMrB,EACK,kBAAC,IAAD,CAAUI,GAAG,eACXP,EACF,kBAAC,IAAD,CAAUO,GAAG,iBAIpB,kBAAC,WAAD,KACGkB,IAAOO,OACR,6BAASnE,GAAG,WACV,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAK6C,IAAKC,EAAQ,SAGtB,yBAAK9C,UAAU,WACb,wBAAIA,UAAU,gBAAd,2BACA,wBAAIA,UAAU,gBAAd,aACY,0BAAMA,UAAU,aAAhB,kBAGd,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,qBACZ,gDAEF,uBAAGA,UAAU,oBAAb,0CAIA,kBAAC,IAAD,CACEyC,GAAG,kBACHjC,KAAK,SACLR,UAAU,kCAHZ,YAQF,yBAAKA,UAAU,eACb,wBAAIA,UAAU,oBACZ,8CAEF,uBAAGA,UAAU,4BAAb,wCAGA,kBAAC,IAAD,CACEyC,GAAG,gBACHzC,UAAU,yCAFZ,cASN,8BAEF,8BAED2D,IAAOQ,W,sBCmCC3E,eAJS,SAAAC,GAAK,MAAK,CAC9ByC,oBAAqBzC,EAAMqC,SAASI,uBAGA,CAACkC,MN7CpB,SAACC,EAAOC,GAAR,8CAAqB,WAAOlE,GAAP,qBAAAmB,EAAA,6DAChCqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAGlBmD,EAAOC,KAAKC,UAAU,CAAEJ,QAAOC,aANC,kBAQhBpD,IAAMwD,KAAK,gBAAiBH,EAAMX,GARlB,OAQ5BlC,EAR4B,OAUlCtB,EAAS,CACLI,KClDsB,qBDmDtBmB,QAASD,EAAIE,OAEjBxB,EAASkB,KAdyB,mDAgB5BqD,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KC5DmB,oBDsCW,0DAArB,wDM6CNhB,EAnGG,SAAC,GAAoC,IAAlC4E,EAAiC,EAAjCA,MAAOlC,EAA0B,EAA1BA,oBACxBwB,IADkD,MAGlBqB,mBAAS,CACrCV,MAAO,GACPC,SAAU,KALoC,mBAG3CU,EAH2C,KAGjCC,EAHiC,KAQ3CZ,EAAmBW,EAAnBX,MAAOC,EAAYU,EAAZV,SACRY,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAMJ,GAAN,SAAA5D,EAAA,sDACb4D,EAAEK,iBACFpB,EAAMC,EAAMC,GAFC,2CAAH,sDAMd,OAAGpC,GAEA7B,QAAMC,gBAAgB,CAEjBC,QAAS,kBACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,gBACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAGT,kBAAC,IAAD,CAAU0B,GAAG,eAIpB,kBAAC,WAAD,KACKkB,IAAOO,OACR,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,4BAAQ0C,MAAO,CAACC,MAAO,YAAvB,eAAyD,IACzD,uBAAG3C,UAAU,yBAGrB,0BAAMuF,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC1B,yBAAKnF,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,sBAA7B,iBACA,2BACIjF,KAAK,QACLR,UAAU,eACV0F,YAAY,4BACZL,KAAK,QACLC,MAAOjB,EACPa,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,IAEZ,2BAAO5F,GAAG,YAAYC,UAAU,wBAAhC,mDAEA,yBAAKA,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,yBAA7B,YACA,2BACIjF,KAAK,WACLR,UAAU,eACV0F,YAAY,uBACZL,KAAK,WACLO,UAAU,IACVN,MAAOhB,EACPY,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,2BAAO3E,KAAK,SAASR,UAAU,eAAesF,MAAM,WACpD,iCAAO,IACP,kBAAC,IAAD,CAAM7C,GAAG,KAAT,2BAGR,yBAAKzC,UAAU,YACX,yBAAK6C,IAAKC,EAAQ,KAA6B+C,IAAI,GAAG7F,UAAU,sBAK/E2D,IAAOQ,WCiBL3E,eAJS,SAAAC,GAAK,MAAK,CAC9B4C,sBAAuB5C,EAAMsC,WAAWM,yBAGJ,CAAC+B,MLhDpB,SAACC,EAAOC,GAAR,8CAAqB,WAAOlE,GAAP,qBAAAmB,EAAA,6DAChCqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAGlBmD,EAAOC,KAAKC,UAAU,CAAEJ,QAAOC,aANC,kBAQhBpD,IAAMwD,KAAK,kBAAmBH,EAAMX,GARpB,OAQ5BlC,EAR4B,OAUlCtB,EAAS,CACLI,KDnEwB,uBCoExBmB,QAASD,EAAIE,OAEjBxB,EAASyB,KAdyB,mDAgB5B8C,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KD7EqB,sBCuDS,0DAArB,wDKgDNhB,EAxGK,SAAC,GAAsC,IAApC4E,EAAmC,EAAnCA,MAAO/B,EAA4B,EAA5BA,sBAC1BqB,IADsD,MAGtBqB,mBAAS,CACrCV,MAAO,GACPC,SAAU,KALwC,mBAG/CU,EAH+C,KAGrCC,EAHqC,KAQ/CZ,EAAmBW,EAAnBX,MAAOC,EAAYU,EAAZV,SACRY,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAMJ,GAAN,SAAA5D,EAAA,sDACb4D,EAAEK,iBACFpB,EAAMC,EAAMC,GAFC,2CAAH,sDAMd,OAAGjC,GAGKhC,QAAMC,gBAAgB,CAEnBC,QAAS,kBACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,gBACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAGX,kBAAC,IAAD,CAAU0B,GAAG,gBAQrB,kBAAC,WAAD,KACKkB,IAAOO,OACR,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,kDACA,uBAAGA,UAAU,yBAGrB,0BAAMuF,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC1B,yBAAKnF,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,sBAA7B,iBACA,2BACIjF,KAAK,QACLR,UAAU,eACV0F,YAAY,4BACZL,KAAK,QACLC,MAAOjB,EACPa,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,IAEZ,2BAAO5F,GAAG,YAAYC,UAAU,wBAAhC,mDAEA,yBAAKA,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,yBAA7B,YACA,2BACIjF,KAAK,WACLR,UAAU,eACV0F,YAAY,uBACZL,KAAK,WACLO,UAAU,IACVN,MAAOhB,EACPY,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,2BAAO3E,KAAK,SAASR,UAAU,eAAesF,MAAM,WACpD,iCAAO,IACP,kBAAC,IAAD,CAAM7C,GAAG,KAAT,2BAGR,yBAAKzC,UAAU,YACX,yBAAK6C,IAAKC,EAAQ,KAA0B+C,IAAI,GAAG7F,UAAU,sBAK5E2D,IAAOQ,WCwFL3E,eAJS,SAACC,GAAD,MAAY,CAClC4C,sBAAuB5C,EAAMsC,WAAWM,yBAGF,CAAElC,WAAU2F,SNxJ5B,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMhB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAMlE,GAAN,qBAAAmB,EAAA,6DAC7CqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAGlBmD,EAAOC,KAAKC,UAAU,CAAEY,OAAMhB,QAAOC,aANQ,kBAQ7BpD,IAAMwD,KAAK,eAAgBH,EAAMX,GARJ,OAQzClC,EARyC,OAW/CtB,EAAS,CACLI,KD3C2B,0BC4C3BmB,QAASD,EAAIE,OAEjBxB,EAASyB,KAfsC,mDAiBzC8C,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KDrDwB,yBC8BmB,0DAA/B,wDMwJThB,EA/KQ,SAAC,GAAkD,EAAhDW,SAAiD,IAAvC2F,EAAsC,EAAtCA,SAAUzD,EAA4B,EAA5BA,sBAE5CqB,IAFwE,MAIxCqB,mBAAS,CACvCM,KAAM,GACNhB,MAAO,GACPC,SAAU,GACVyB,UAAW,KAR2D,mBAIjEf,EAJiE,KAIvDC,EAJuD,KAWhEI,EAAqCL,EAArCK,KAAMhB,EAA+BW,EAA/BX,MAAOC,EAAwBU,EAAxBV,SAAUyB,EAAcf,EAAde,UACzBb,EAAW,SAACC,GAAD,OACfF,EAAY,2BACPD,GADM,kBAERG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAA5D,EAAA,sDACf4D,EAAEK,iBACElB,IAAayB,EAEf1F,QAAMC,gBAAgB,CACpB0F,MAAO,iBACRzF,QAAS,2CACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,gBACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAIb+E,EAAS,CAAET,OAAMhB,QAAOC,aAlBX,2CAAH,sDAsBd,OAAIjC,GAGFhC,QAAMC,gBAAgB,CAEpBC,QAAS,kBACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,gBACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAQN,kBAAC,IAAD,CAAU0B,GAAG,gBASrB,kBAAC,WAAD,KACGkB,IAAOO,OAGR,6BAASnE,GAAG,UACV,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,4BACE,0CACA,uBAAGA,UAAU,qBAGjB,0BAAMuF,SAAU,SAACJ,GAAD,OAAOI,EAASJ,KAC9B,yBAAKnF,UAAU,cACb,2BAAOA,UAAU,QAAQyF,IAAI,sBAA7B,iBAGA,2BACEjF,KAAK,QACLR,UAAU,eACV0F,YAAY,4BACZL,KAAK,QACLC,MAAOjB,EACPa,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOpF,GAAG,YAAYC,UAAU,wBAAhC,iBACiB,IACf,uBACEqD,KAAK,2BACL+B,OAAO,SACPa,IAAI,uBAHN,WAKW,KACN,IARP,yDAYF,yBAAKjG,UAAU,cACb,2BAAOA,UAAU,QAAQyF,IAAI,sBAA7B,aAGA,2BACEjF,KAAK,OACLR,UAAU,eACV0F,YAAY,wBACZL,KAAK,OACLC,MAAOD,EACPH,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKnF,UAAU,cACb,2BAAOA,UAAU,QAAQyF,IAAI,yBAA7B,YAGA,2BACEjF,KAAK,WACLR,UAAU,eACV0F,YAAY,kBACZL,KAAK,WACLC,MAAOhB,EACPY,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKnF,UAAU,cACb,2BAAOA,UAAU,QAAQyF,IAAI,yBAA7B,oBAGA,2BACEjF,KAAK,WACLR,UAAU,eACV0F,YAAY,6BACZL,KAAK,YACLC,MAAOS,EACPb,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAO3E,KAAK,SAASR,UAAU,eAAesF,MAAM,cAGxD,yBAAKtF,UAAU,YACb,yBACEA,UAAU,gBACV6C,IAAKC,EAAQ,KACb+C,IAAI,SAMblC,IAAOQ,WCzBC3E,eAJQ,SAAAC,GAAK,MAAK,CAC7ByC,oBAAqBzC,EAAMqC,SAASI,uBAGA,CAAC/B,WAAU2F,SThH3B,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMhB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAMlE,GAAN,qBAAAmB,EAAA,6DAC7CqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAGlBmD,EAAOC,KAAKC,UAAU,CAAEY,OAAMhB,QAAOC,aANQ,kBAQ7BpD,IAAMwD,KAAK,cAAeH,EAAMX,GARH,OAQzClC,EARyC,OAU/CtB,EAAS,CACLI,KC1ByB,wBD2BzBmB,QAASD,EAAIE,OAEjBxB,EAASkB,KAdsC,mDAgBzCqD,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KCpCsB,uBDcqB,0DAA/B,wDSgHThB,EAxIM,SAAC,GAAgD,EAA9CW,SAA+C,IAArC2F,EAAoC,EAApCA,SAAU5D,EAA0B,EAA1BA,oBACxCwB,IADkE,MAGlCqB,mBAAS,CACrCM,KAAM,GACNhB,MAAO,GACPC,SAAU,GACVyB,UAAW,KAPmD,mBAG3Df,EAH2D,KAGjDC,EAHiD,KAU3DI,EAAoCL,EAApCK,KAAMhB,EAA8BW,EAA9BX,MAAOC,EAAuBU,EAAvBV,SAAUyB,EAAaf,EAAbe,UACxBb,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAMJ,GAAN,SAAA5D,EAAA,sDACb4D,EAAEK,iBACClB,IAAayB,EAER1F,QAAMC,gBAAgB,CACjB0F,MAAO,iBACRzF,QAAS,2CACTC,KAAM,SACNC,OAAQ,MACRC,UAAW,gBACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAIpB+E,EAAS,CAAET,OAAMhB,QAAOC,aAlBf,2CAAH,sDAqBd,OAAGpC,GAEC7B,QAAMC,gBAAgB,CAElBC,QAAS,kBACTC,KAAM,UACNC,OAAQ,MACRC,UAAW,gBACXC,YAAa,CAAC,oBAAqB,mBACnCC,aAAc,CAAC,oBAAqB,oBACpCC,QAAS,CACPC,SAAU,IACVC,UAAU,KAGT,kBAAC,IAAD,CAAU0B,GAAG,kBAIpB,kBAAC,WAAD,KACKkB,IAAOO,OACR,6BAASnE,GAAG,UACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACf,4BAAI,4BAAQ0C,MAAO,CAACC,MAAO,YAAvB,SACA,uBAAG3C,UAAU,eAAe0C,MAAO,CAACC,MAAO,eAG/C,0BAAM4C,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC1B,yBAAKnF,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,sBAA7B,iBACA,2BACIjF,KAAK,QACLR,UAAU,eACV0F,YAAY,4BACZL,KAAK,QACLC,MAAOjB,EACPa,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE5B,2BAAOpF,GAAG,YAAYC,UAAU,wBAAhC,kBAAsE,uBAAGqD,KAAK,2BAA2B+B,OAAO,SAASa,IAAI,uBAAvD,aAAtE,0DAEA,yBAAKjG,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,sBAA7B,aACA,2BACIjF,KAAK,OACLR,UAAU,eACV0F,YAAY,wBACZL,KAAK,OACLC,MAAOD,EACPH,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,yBAAKnF,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,yBAA7B,YACA,2BACIjF,KAAK,WACLR,UAAU,eACV0F,YAAY,kBACZL,KAAK,WACLC,MAAOhB,EACPY,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,yBAAKnF,UAAU,cACf,2BAAOA,UAAU,QAAQyF,IAAI,yBAA7B,oBACA,2BACIjF,KAAK,WACLR,UAAU,eACV0F,YAAY,6BACZL,KAAK,YACLC,MAAOS,EACPb,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,2BAAO3E,KAAK,SAASR,UAAU,eAAesF,MAAM,cAG5D,yBAAKtF,UAAU,YACX,yBAAKA,UAAU,gBAAgB6C,IAAKC,EAAQ,KAAoC+C,IAAI,SAKnGlC,IAAOQ,W,iBClIL,oBACb,kBAAC,WAAD,KACC,yBAAKtB,IAAOqD,MADb,O,iBCcWC,EAAoB,yDAAM,WAAM/F,GAAN,eAAAmB,EAAA,+EAEbL,IAAMO,IAAI,mBAFG,OAEzBC,EAFyB,OAG/BtB,EAAS,CACLI,KVVe,cUWfmB,QAASD,EAAIE,OALc,gDAQ/BxB,EAAS,CACLI,KVViB,gBUWjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAVnC,yDAAN,uDAiCpBC,EAAiB,SAAAC,GAAQ,8CAAI,WAAMnG,GAAN,eAAAmB,EAAA,+EAEhBL,IAAMO,IAAN,8BAAiC8E,IAFjB,OAE5B7E,EAF4B,OAGlCtB,EAAS,CACLI,KV1CqB,oBU2CrBmB,QAASD,EAAIE,OALiB,gDAQlCxB,EAAS,CACLI,KV3CiB,gBU4CjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAVhC,yDAAJ,uDAgBzBG,EAAgB,SAACxB,EAAUyB,GAAX,IAAoBC,EAApB,sGAAmC,WAAMtG,GAAN,mBAAAmB,EAAA,sEAElDqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAJgC,SAOtCF,IAAMwD,KAAK,cAAeM,EAAUpB,GAPE,OAOlDlC,EAPkD,OAQxDtB,EAAS,CACLI,KVhEe,cUiEfmB,QAASD,EAAIE,OAEjBxB,EAASD,EAASuG,EAAO,kBAAoB,kBAAmB,YAE5DA,GACAD,EAAQE,KAAK,cAfuC,mDAkBlDhC,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KV1EiB,gBU2EjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAzBV,0DAAnC,uDCPd7G,cAAQ,KAAM,CAAEoH,iBD+FC,SAAAC,GAAM,8CAAI,WAAMzG,GAAN,eAAAmB,EAAA,+EAEhBL,IAAM4F,OAAN,iCAAuCD,IAFvB,OAE5BnF,EAF4B,OAGlCtB,EAAS,CACLI,KVhJkB,iBUiJlBmB,QAASD,EAAIE,OAEjBxB,EAASD,EAAS,qBAAsB,YAPN,gDASlCC,EAAU,CACNI,KVpJiB,gBUqJjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAXhC,yDAAJ,wDC/FvB7G,EArDI,SAAC,GAAsC,IAApCuH,EAAmC,EAAnCA,WAAYH,EAAuB,EAAvBA,iBAC1BI,EAAcD,EAAWlH,KAAI,SAACoH,GAAD,OACjC,wBAAInH,IAAKmH,EAAIlH,IACX,4BAAKkH,EAAIC,SACT,4BAAKD,EAAIE,UACT,4BACE,kBAAC,IAAD,CAAQC,OAAO,cAAcH,EAAII,MADnC,KACoD,IACtC,OAAXJ,EAAIxE,GACH,MAEA,kBAAC,IAAD,CAAQ2E,OAAO,cAAcH,EAAIxE,KAGrC,4BACE,4BACEW,QAAS,kBAAMwD,EAAiBK,EAAIK,MACpC9G,KAAK,SACLR,UAAU,kBAHZ,UAUN,OACE,kBAAC,WAAD,KACE,yBAAKA,UAAU,kBACb,wBAAIuH,MAAM,eACR,2DAEF,6BACA,yBAAKvH,UAAU,gBACb,2BAAOA,UAAU,mBACf,4BACE,wCACA,uCACA,qCACA,8BAEDgH,KAIP,iCCUSxH,cAAQ,KAAM,CAAEgI,gBF+GA,SAAAC,GAAM,8CAAI,WAAMrH,GAAN,eAAAmB,EAAA,+EAEfL,IAAM4F,OAAN,gCAAsCW,IAFvB,OAE3B/F,EAF2B,OAGjCtB,EAAS,CACLI,KVhKkB,iBUiKlBmB,QAASD,EAAIE,OAEjBxB,EAASD,EAAS,oBAAqB,YAPN,gDASjCC,EAAU,CACNI,KVpKiB,gBUqKjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAXjC,yDAAJ,wDE/GtB7G,EArDG,SAAC,GAAoC,IAAlCkI,EAAiC,EAAjCA,UAAWF,EAAsB,EAAtBA,gBACxBG,EAAaD,EAAU7H,KAAI,SAAC+H,GAAD,OAC/B,wBAAI9H,IAAK8H,EAAI7H,IACX,4BAAK6H,EAAIC,QACT,4BAAKD,EAAIE,QACT,4BACE,kBAAC,IAAD,CAAQV,OAAO,cAAcQ,EAAIP,MADnC,KACoD,IACtC,OAAXO,EAAInF,GACH,MAEA,kBAAC,IAAD,CAAQ2E,OAAO,cAAcQ,EAAInF,KAGrC,4BACE,4BACEW,QAAS,kBAAMoE,EAAgBI,EAAIN,MACnC9G,KAAK,SACLR,UAAU,kBAHZ,UAUN,OACE,kBAAC,WAAD,KACE,yBAAKA,UAAU,kBACb,wBAAIuH,MAAM,eACR,0DAEF,6BACA,yBAAKA,MAAM,gBACT,2BAAOA,MAAM,mBACX,4BACE,sCACA,sCACA,qCACA,8BAEDI,KAIP,iCCqDSnI,cAAQ,KAARA,EAjGC,SAAC,GAAe,IAAduI,EAAa,EAAbA,QAAa,EAEFhD,mBAAS,IAFP,mBAEpBO,EAFoB,KAEd0C,EAFc,KAIrBC,EAAYF,EAAQlI,KAAI,SAAAqI,GAAG,OAC7B,kBAAC,WAAD,CAAUpI,IAAKoI,EAAIZ,KACf,wBAAItH,UAAU,iBAAgB,gCAASkI,EAAIC,cAC3C,uBAAGnI,UAAU,aAAY,kDAAwBkI,EAAIE,aACrD,uBAAGpI,UAAU,cAAa,yCAAuBkI,EAAIG,KACrD,uBAAGrI,UAAU,cAAa,4CAA0BkI,EAAI7B,QACxD,uBAAGrG,UAAU,cAAa,0CAAuB,kBAAC,IAAD,CAAQoH,OAAO,cAAcc,EAAII,OAClF,uBAAGtI,UAAU,cAAa,gDAA8BkI,EAAIK,eAG9DC,EAAWT,EAAQlI,KAAI,SAAA4I,GAAG,OAC5B,wBAAI3I,IAAK2I,EAAInB,KACT,4BAAKmB,EAAIF,WACT,4BAAKE,EAAIN,aACT,4BACI,kBAAC,IAAD,CAAQf,OAAO,cAAcqB,EAAIH,OAErC,4BACA,4BACIlF,QAAS,kBAAM4E,EAASS,EAAInB,MAC5B9G,KAAK,SACLR,UAAU,eACV+C,cAAY,QAAQC,cAAY,iBAJpC,QAOI,yBAAKhD,UAAU,cAAcD,GAAG,eAAe2I,KAAK,SAASlF,kBAAgB,oBAAoBmF,cAAY,QACzG,yBAAK3I,UAAU,8DACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cAAcD,GAAG,qBAA/B,mBACA,4BAAQS,KAAK,SAASR,UAAU,QAAQ4I,eAAa,QAAQzF,aAAW,SACpE,0BAAMwF,cAAY,QAAlB,UAGR,yBAAK3I,UAAU,cACX,yBAAKA,UAAU,YACX,6BACI,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,6BAEPiI,EAAUpI,KAAI,SAAAgJ,GAAK,OAAIvD,IAAUuD,EAAM/I,IACnC+I,EAAMC,MAAMC,SAAW,QAIvC,yBAAK/I,UAAU,0BACX,uBAAGA,UAAU,cAAa,iDAA+ByI,EAAIO,iBAK7E,yBAAKhJ,UAAU,gBACX,4BAAQQ,KAAK,SAASR,UAAU,eAAe4I,eAAa,SAA5D,kBAS5B,OACI,kBAAC,WAAD,KACI,yBAAK5I,UAAU,kBACX,wBAAIA,UAAU,eAAc,wDACxB,6BACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,gBACX,2BAAOA,UAAU,SACb,+BACI,4BACI,0CACA,8CACA,oCACA,+BAGZ,+BACKwI,OAMrB,iC,QC0EGS,EAnKD,SAAC,GAAe,IAAdlB,EAAa,EAAbA,QAAa,EACShD,mBAAS,IADlB,mBAClBmE,EADkB,KACPC,EADO,KAwHzB,OAJAC,qBAAU,YAjHI,WACV,IAAMC,EAAc,GACdC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GAEblC,EAAQlD,SAAQ,SAAAqD,GACZ,OAAqC,IAAlC,IAAIgC,KAAKhC,EAAII,MAAM6B,WACXb,EAAI3C,KAAK2C,EAAI,GAAG,GACiB,IAAlC,IAAIY,KAAKhC,EAAII,MAAM6B,WAClBZ,EAAI5C,KAAK4C,EAAI,GAAG,GACiB,IAAlC,IAAIW,KAAKhC,EAAII,MAAM6B,WAClBX,EAAI7C,KAAK6C,EAAI,GAAG,GACiB,IAAlC,IAAIU,KAAKhC,EAAII,MAAM6B,WAClBV,EAAI9C,KAAK8C,EAAI,GAAG,GACiB,IAAlC,IAAIS,KAAKhC,EAAII,MAAM6B,WAClBT,EAAI/C,KAAK+C,EAAI,GAAG,GACiB,IAAlC,IAAIQ,KAAKhC,EAAII,MAAM6B,WAClBR,EAAIhD,KAAKgD,EAAI,GAAG,GACiB,IAAlC,IAAIO,KAAKhC,EAAII,MAAM6B,WAClBP,EAAIjD,KAAKiD,EAAI,GAAG,GACiB,IAAlC,IAAIM,KAAKhC,EAAII,MAAM6B,WAClBN,EAAIlD,KAAKkD,EAAI,GAAG,GACiB,IAAlC,IAAIK,KAAKhC,EAAII,MAAM6B,WAClBL,EAAInD,KAAKmD,EAAI,GAAG,GACiB,IAAlC,IAAII,KAAKhC,EAAII,MAAM6B,WAClBJ,EAAIpD,KAAKoD,EAAI,GAAG,GACiB,KAAlC,IAAIG,KAAKhC,EAAII,MAAM6B,WAClBH,EAAIrD,KAAKqD,EAAI,GAAG,GACiB,KAAlC,IAAIE,KAAKhC,EAAII,MAAM6B,WAClBF,EAAItD,KAAKsD,EAAI,GAAG,QADpB,KAMX,IAAIG,EAAUd,EAAIe,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGhB,EAAI,IACzCiB,EAAUhB,EAAIc,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGf,EAAI,IACzCiB,EAAUhB,EAAIa,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGd,EAAI,IACzCiB,EAAUhB,EAAIY,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGb,EAAI,IACzCiB,EAAUhB,EAAIW,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGZ,EAAI,IACzCiB,EAAUhB,EAAIU,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGX,EAAI,IACzCiB,EAAUhB,EAAIS,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGV,EAAI,IACzCiB,EAAUhB,EAAIQ,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGT,EAAI,IACzCiB,EAAUhB,EAAIO,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGR,EAAI,IACzCiB,EAAUhB,EAAIM,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGP,EAAI,IACzCiB,EAAUhB,EAAIK,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGN,EAAI,IACzCiB,EAAUhB,EAAII,QAAQ,SAAC9I,EAAG+I,GAAJ,OAAU/I,EAAE+I,IAAGL,EAAI,IAE7CZ,EAAY1C,KAAKyD,GACjBf,EAAY1C,KAAK4D,GACjBlB,EAAY1C,KAAK6D,GACjBnB,EAAY1C,KAAK8D,GACjBpB,EAAY1C,KAAK+D,GACjBrB,EAAY1C,KAAKgE,GACjBtB,EAAY1C,KAAKiE,GACjBvB,EAAY1C,KAAKkE,GACjBxB,EAAY1C,KAAKmE,GACjBzB,EAAY1C,KAAKoE,GACjB1B,EAAY1C,KAAKqE,GACjB3B,EAAY1C,KAAKsE,GAIjB9B,EAAa,CACT+B,OAAQ,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAERC,SAAU,CACN,CACIC,MAAO,oBACPxJ,KAAMyH,EACNgC,YAAa,CACT,WAEJC,iBAAkB,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,YAAa,MAMzBC,KACD,IAGC,kBAAC,WAAD,KACI,yBAAKxL,UAAU,cACC,kBAAC,IAAD,CACI4B,KAAMsH,EACNuC,QAAS,CACLzF,MAAO,CAAE0F,KAAM,0BAA2BC,SAAS,GACnDT,OAAQ,CACJ,UAAa,UACb,WAAc,QAElBU,OAAQ,CACRC,MAAO,CACH,CACAC,MAAO,CACHC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEjBC,UAAW,CACPP,SAAS,KAIjBQ,MAAO,CACH,CACAD,UAAW,CACPP,SAAS,YCvGtCnM,cAAQ,KAARA,EA1CA,SAAC,GAAuB,IAAtB4M,EAAqB,EAArBA,OAAQrE,EAAa,EAAbA,QACfsE,EAAUD,EAAOvM,KAAI,SAAAyM,GAAG,OAC1B,yBAAKtM,UAAU,QACX,yBAAKA,UAAU,eAAe6C,IAAKyJ,EAAIC,OAAQ1G,IAAI,mBAC/C,yBAAK7F,UAAU,aACX,uBAAGA,UAAU,aAAasM,EAAIZ,MAC9B,uBAAGnE,MAAM,aAAT,YACE,IAAI,kBAAC,IAAD,CAAQH,OAAO,cAAckF,EAAIhE,OAEvC,4BAAKgE,EAAIjH,WAIzB,OACI,kBAAC,WAAD,KACI,yBAAKrF,UAAU,gBACX,yBAAKA,UAAU,kBACf,wBAAIuH,MAAM,eAAc,kDACpB,6BACA,yBAAKxH,GAAG,gBACJ,yBAAKwH,MAAM,UACa,IAAlB6E,EAAOxM,OAAe,iBAAmByM,KAIvD,yBAAKrM,UAAU,kBACX,wBAAIA,UAAU,eAAc,uDAC5B,6BACA,yBAAKD,GAAG,SACJ,kBAAC,EAAD,CAAOgI,QAASA,OAI5B,iCC8CGvI,G,OAAAA,aALS,SAAAC,GAAK,MAAK,CAC9BsC,WAAYtC,EAAMsC,WAClByK,QAAS/M,EAAM+M,WAGqB,CAACrG,oBAAmBsG,cNgJ/B,yDAAM,WAAMrM,GAAN,SAAAmB,EAAA,0DAC5BmL,OAAOC,QAAQ,yCADa,0CAGjBzL,IAAM4F,OAAO,gBAHI,OAKvB1G,EAAS,CACLI,KV5Na,kBU8NjBJ,EAAS,CACLI,KV7Nc,mBUgOlBJ,EAASD,EAAS,gCAAiC,YAZ5B,gDAcvBC,EAAU,CACNI,KVpOa,gBUqObmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAhB3C,yDAAN,wDMhJd7G,EAtEG,SAAC,GAKR,IAJH2G,EAIE,EAJFA,kBACAsG,EAGE,EAHFA,cACalK,EAEX,EAFFR,WAAaQ,OAEX,IADFiK,QAAUA,EACR,EADQA,QAASI,EACjB,EADiBA,QAQvB,OANIlJ,IAEA0F,qBAAU,WACNjD,MACD,CAACA,IAEDyG,GAAsB,MAAXJ,EACd,kBAACK,EAAD,MAEA,kBAAC,WAAD,KACKlJ,IAAOO,OACJ,6BAASnE,GAAG,aACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,8CACJ,wBAAIA,UAAU,mBAAkB,uBAAGA,UAAU,mBAA7C,YAA4EuC,GAAUA,EAAO8C,OAEjG,6BACa,OAAZmH,EACG,kBAAC,WAAD,KAC0B,OAArBA,EAAQhE,UAAqBgE,EAAQhE,SAAS5I,OAAS,EAEhD,kBAAC,EAAD,CAASmI,QAASyE,EAAQhE,WAE1B,wBAAI9F,MAAO,CAACC,MAAO,YAAnB,yBAGR,kBAAC,EAAD,CAAQoF,QAASyE,EAAQhE,SAAU4D,OAAQI,EAAQJ,SACnD,kBAAC,EAAD,CAAYrF,WAAYyF,EAAQzF,aAChC,kBAAC,EAAD,CAAWW,UAAW8E,EAAQ9E,YAC9B,4BACItE,QAAS,kBAAMqJ,KACfjM,KAAK,SACLR,UAAU,kBAAiB,uBAAGA,UAAU,sBAH5C,uBAOJ,kBAAC,WAAD,KACI,0EAEA,kBAAC,IAAD,CAAMyC,GAAG,kBAAkBzC,UAAU,gBAArC,qBAOhB,6BACC2D,IAAOQ,YC+DT3E,cAAQ,KAAM,CAACsN,aPRF,SAAC9H,EAAUyB,GAAX,8CAAuB,WAAMrG,GAAN,mBAAAmB,EAAA,sEAErCqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAJmB,SAOzBF,IAAM6L,IAAI,wBAAyB/H,EAAUpB,GAPpB,OAOrClC,EAPqC,OAQ3CtB,EAAS,CACLI,KVvHkB,iBUwHlBmB,QAASD,EAAIE,OAEjBxB,EAASD,EAAS,kBAAmB,YAGrCsG,EAAQE,KAAK,cAf8B,mDAiBrChC,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KVnIiB,gBUoIjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAxBvB,0DAAvB,wDOQb7G,CAA8BwN,aA3HxB,SAAC,GAA6B,IAA5BF,EAA2B,EAA3BA,aAAcrG,EAAa,EAAbA,QACjC/C,IAD8C,MAGdqB,mBAAS,CACrC8C,OAAQ,GACRC,OAAQ,GACRmF,aAAc,GACd5F,KAAK,GACL5E,GAAG,GACHyK,SAAS,EACTlE,YAAa,KAV6B,mBAGvChE,EAHuC,KAG7BmI,EAH6B,OAaLpI,oBAAS,GAbJ,mBAavCqI,EAbuC,KAavBC,EAbuB,KAevCxF,EAAgE7C,EAAhE6C,OAAQC,EAAwD9C,EAAxD8C,OAAQmF,EAAgDjI,EAAhDiI,aAAc5F,EAAkCrC,EAAlCqC,KAAM5E,EAA4BuC,EAA5BvC,GAAIyK,EAAwBlI,EAAxBkI,QAASlE,EAAehE,EAAfgE,YAElD9D,EAAW,SAAAC,GAAC,OAAIgI,EAAY,2BAC3BnI,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAG9B,OACI,kBAAC,WAAD,KACK3B,IAAOO,OACR,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACP,yBAAK0C,MAAO,CAAC4K,OAAQ,QAAS/F,MAAM,eAChC,yBAAKvH,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,iDACA,uBAAGA,UAAU,uBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,6DAIJ,0BAAMuF,SAAU,SAAAJ,GACZA,EAAEK,iBACFsH,EAAa9H,EAAUyB,KAEvB,qDACA,yBAAKzG,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,WACZL,KAAK,SACLC,MAAOuC,EACP3C,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK3F,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,4BACZL,KAAK,SACLC,MAAOwC,EACP5C,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK3F,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,mBACZL,KAAK,eACLC,MAAO2H,EACP/H,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAIZ,yCACA,yBAAK3F,UAAU,cACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAeqF,KAAK,OAAOC,MAAO+B,EAAMnC,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjG,yBAAKnF,UAAU,cACX,2BAAG,2BAAOQ,KAAK,WAAW6E,KAAK,UAAUkI,QAASL,EAAS5H,MAAO4H,EAAShI,SAAU,SAAAC,GACjFgI,EAAY,2BAAKnI,GAAN,IAAgBkI,SAAUA,KACrCG,GAAgBD,MAFpB,IAGO,IAHP,oBAKJ,uCACA,yBAAKpN,UAAU,cACX,2BACIQ,KAAK,OACLR,UAAU,eACVqF,KAAK,KACLC,MAAO7C,EACPyC,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIqI,SAAUJ,EAAiB,WAAa,MAE5E,yBAAKpN,UAAU,cACX,8BACIqF,KAAK,cACLrF,UAAU,eACV0F,YAAY,wBACZJ,MAAO0D,EAAa9D,SAAU,SAAAC,GAAC,OAAID,EAASC,MAChD,2BAAOnF,UAAU,aAAjB,wCAEJ,2BAAOQ,KAAK,SAASR,UAAU,iBAAkB,IACjD,kBAAC,IAAD,CAAMyC,GAAG,aAAajC,KAAK,SAASR,UAAU,6BAA9C,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAK6C,IAAKC,EAAQ,KAA6B+C,IAAI,GAAG7F,UAAU,sBAKnF2D,IAAOQ,YCQL3E,cAAQ,KAAM,CAACiO,cRlCD,SAACzI,EAAUyB,GAAX,8CAAuB,WAAMrG,GAAN,mBAAAmB,EAAA,sEAEtCqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAJoB,SAO1BF,IAAM6L,IAAI,yBAA0B/H,EAAUpB,GAPpB,OAOtClC,EAPsC,OAQ5CtB,EAAS,CACLI,KV5FkB,iBU6FlBmB,QAASD,EAAIE,OAEjBxB,EAASD,EAAS,mBAAoB,YACtCsG,EAAQE,KAAK,cAb+B,mDAetChC,EAAS,KAAIC,SAAShD,KAAK+C,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAI1E,EAASD,EAAS2E,EAAM5E,IAAK,cAGzDE,EAAS,CACLI,KVtGiB,gBUuGjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAtBtB,0DAAvB,wDQkCd7G,CAA+BwN,aA3HxB,SAAC,GAA8B,IAA7BS,EAA4B,EAA5BA,cAAehH,EAAa,EAAbA,QACnC/C,IADgD,MAGhBqB,mBAAS,CACrCmC,QAAS,GACTC,SAAU,GACVuG,SAAU,GACVrG,KAAM,GACN5E,GAAI,GACJyK,SAAS,EACTlE,YAAa,KAV+B,mBAGzChE,EAHyC,KAG/BC,EAH+B,OAaPF,oBAAS,GAbF,mBAazCqI,EAbyC,KAazBC,EAbyB,KAezCnG,EAA+DlC,EAA/DkC,QAASC,EAAsDnC,EAAtDmC,SAAUuG,EAA4C1I,EAA5C0I,SAAUrG,EAAkCrC,EAAlCqC,KAAM5E,EAA4BuC,EAA5BvC,GAAIyK,EAAwBlI,EAAxBkI,QAASlE,EAAehE,EAAfgE,YAEjD9D,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAE9B,OACI,6BACK3B,IAAOO,OACR,kBAAC,WAAD,KACA,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAK0C,MAAO,CAAC4K,OAAQ,QAAS/F,MAAM,eAC5B,yBAAKvH,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,mDACA,uBAAGA,UAAU,sBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,sEAIJ,0BAAMuF,SAAU,SAAAJ,GACZA,EAAEK,iBACFiI,EAAczI,EAAUyB,KAExB,qDACA,yBAAKzG,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,aACZL,KAAK,UACLC,MAAO4B,EACPhC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK3F,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,aACZL,KAAK,WACLC,MAAO6B,EACPjC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK3F,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,aACZL,KAAK,WACLC,MAAOoI,EACPxI,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAIZ,yCACA,yBAAK3F,UAAU,cACX,2BAAOQ,KAAK,OAAOR,UAAU,eAAeqF,KAAK,OAAOC,MAAO+B,EAAMnC,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjG,yBAAKnF,UAAU,cACX,2BAAG,2BAAOQ,KAAK,WAAW6E,KAAK,UAAUkI,QAASL,EAAS5H,MAAO4H,EAAShI,SAAU,SAAAC,GACjFF,EAAY,2BAAKD,GAAN,IAAgBkI,SAAUA,KACrCG,GAAgBD,MAFpB,IAGO,IAHP,iBAKJ,uCACA,yBAAKpN,UAAU,cACX,2BACIQ,KAAK,OACLR,UAAU,eACVqF,KAAK,KACLC,MAAO7C,EACPyC,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIqI,SAAUJ,EAAiB,WAAa,MAE5E,yBAAKpN,UAAU,cACX,8BACIqF,KAAK,cACLrF,UAAU,eACV0F,YAAY,wBACZJ,MAAO0D,EAAa9D,SAAU,SAAAC,GAAC,OAAID,EAASC,MAChD,2BAAOnF,UAAU,aAAjB,oCAEJ,2BAAOQ,KAAK,SAASR,UAAU,iBAAkB,IACjD,kBAAC,IAAD,CAAMyC,GAAG,aAAajC,KAAK,SAASR,UAAU,6BAA9C,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBAAgB6C,IAAKC,EAAQ,KAA+C+C,IAAI,UAMtHlC,IAAOQ,YC0HD3E,cAAQ,KAAM,CAACgH,iBAAfhH,CAA+BwN,aA7OxB,SAAC,GAA+B,IAA7BxG,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,QACpC/C,IADiD,MAGjBqB,mBAAS,CACrC4I,OAAQ,GACRC,QAAS,GACTF,SAAU,GACVrH,OAAQ,GACRwH,YAAa,GACbC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,UAAW,KAfkC,mBAG1CpJ,EAH0C,KAGhCC,EAHgC,OAkBAF,oBAAS,GAlBT,mBAkB1CsJ,EAlB0C,KAkBtBC,EAlBsB,KAqB7CX,EAYA3I,EAZA2I,OACAC,EAWA5I,EAXA4I,QACAF,EAUA1I,EAVA0I,SACArH,EASArB,EATAqB,OACAwH,EAQA7I,EARA6I,YACAC,EAOA9I,EAPA8I,QACAC,EAMA/I,EANA+I,OACAC,EAKAhJ,EALAgJ,IACAC,EAIAjJ,EAJAiJ,QACAC,EAGAlJ,EAHAkJ,SACAC,EAEAnJ,EAFAmJ,QACAC,EACApJ,EADAoJ,UAGElJ,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAO9B,OACI,kBAAC,WAAD,KACK3B,IAAOO,OACR,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAK0C,MAAO,CAAC4K,OAAQ,QAAS/F,MAAM,eAChC,yBAAKvH,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,+CACA,uBAAGA,UAAU,oBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,+DAKJ,0BAAMuF,SAAU,SAAAJ,GAAC,OArBxB,SAAAA,GACbA,EAAEK,iBACFgB,EAAcxB,EAAUyB,GAmBiBlB,CAASJ,KAC1B,qDACA,yBAAKnF,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,4DACZL,KAAK,SACLC,MAAOe,EACPnB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,uDAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,WACZL,KAAK,SACLC,MAAOqI,EACPzI,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,8CAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,YACZL,KAAK,cACLC,MAAOuI,EACP3I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,wCAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,WACZL,KAAK,SACLC,MAAOyI,EACP7I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,YACZL,KAAK,UACLC,MAAOwI,EACP5I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,aACZL,KAAK,UACLC,MAAOsI,EACP1I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,2CAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,cACZL,KAAK,WACLC,MAAOoI,EACPxI,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,sDAEA,yBAAKA,UAAU,cACX,8BACIA,UAAU,eACV0F,YAAY,4BACZL,KAAK,MACLC,MAAO0I,EACP9I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,aAAjB,oCAGJ,yBAAKA,UAAU,QACX,4BAAQoD,QAAS,kBAAMkL,GAAoBD,IACvC7N,KAAK,SAASR,UAAU,6BAD5B,4BAIA,0BAAMA,UAAU,cAAhB,IAA+B,IAA/B,aAIHqO,GACG,kBAAC,WAAD,KACI,6BACI,yBAAKrO,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,sBACZL,KAAK,UACLC,MAAO2I,EAAS/I,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,sBAGrB,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,uBACZL,KAAK,WACLC,MAAO4I,EAAUhJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjD,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,sBACZL,KAAK,UACLC,MAAO6I,EAASjJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,uBAGrB,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,wBACZL,KAAK,YACLC,MAAO8I,EAAWlJ,SAAU,SAAAC,GAAC,OAAID,EAASC,SAK9D,2BAAO3E,KAAK,SAASR,UAAU,iBA7JnC,IA6JsD,IAClD,kBAAC,IAAD,CAAMyC,GAAG,aAAazC,UAAU,6BAAhC,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAK6C,IAAKC,EAAQ,IAA0B+C,IAAI,GAAG7F,UAAU,sBAK5E2D,IAAOQ,YC8BL3E,eAJS,SAAAC,GAAK,MAAK,CAC9B+M,QAAS/M,EAAM+M,WAGqB,CAAChG,gBAAeL,qBAAzC3G,CAA6DwN,aAnQ/D,SAAC,GAA+E,IAAD,IAA5ER,QAAUA,EAAkE,EAAlEA,QAASI,EAAyD,EAAzDA,QAAUpG,EAA+C,EAA/CA,cAAeL,EAAgC,EAAhCA,kBAAmBM,EAAa,EAAbA,QAC3E/C,EAAiB,GADuE,MAGxDqB,mBAAS,CACrC4I,OAAQ,GACRC,QAAS,GACTF,SAAU,GACVrH,OAAQ,GACRwH,YAAa,GACbC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,UAAW,KAfyE,mBAGjFpJ,EAHiF,KAGvEC,EAHuE,OAkBvCF,oBAAS,GAlB8B,mBAkBjFsJ,EAlBiF,KAkB7DC,EAlB6D,KAmBxFlF,qBAAU,WACNjD,IACAlB,EAAY,CACR0I,OAAQf,IAAYJ,EAAQmB,OAAS,GAAInB,EAAQmB,OACjDC,QAAShB,IAAYJ,EAAQoB,QAAU,GAAIpB,EAAQoB,QACnDF,SAAUd,IAAYJ,EAAQkB,SAAW,GAAIlB,EAAQkB,SACrDrH,OAAQuG,IAAYJ,EAAQnG,OAAS,GAAImG,EAAQnG,OACjDwH,YAAajB,IAAYJ,EAAQqB,YAAc,GAAIrB,EAAQqB,YAC3DC,QAASlB,IAAYJ,EAAQsB,QAAU,GAAItB,EAAQsB,QACnDC,OAAQnB,IAAYJ,EAAQuB,OAAS,GAAIvB,EAAQuB,OACjDC,IAAKpB,IAAYJ,EAAQwB,IAAM,GAAIxB,EAAQwB,IAC3CC,QAASrB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAON,QACzDC,SAAUtB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAOL,SAC1DC,QAASvB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAOJ,QACzDC,UAAWxB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAOH,cAEjE,CAACxB,EAASzG,IAnC4E,IAsCpFwH,EAYA3I,EAZA2I,OACAC,EAWA5I,EAXA4I,QACAF,EAUA1I,EAVA0I,SACArH,EASArB,EATAqB,OACAwH,EAQA7I,EARA6I,YACAC,EAOA9I,EAPA8I,QACAC,EAMA/I,EANA+I,OACAC,EAKAhJ,EALAgJ,IACAC,EAIAjJ,EAJAiJ,QACAC,EAGAlJ,EAHAkJ,SACAC,EAEAnJ,EAFAmJ,QACAC,EACApJ,EADAoJ,UAGElJ,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAO9B,OACI,kBAAC,WAAD,KACK3B,IAAOO,OACR,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAK0C,MAAO,CAAC4K,OAAQ,QAAS/F,MAAM,eAChC,yBAAKvH,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,gDAA8B,IAC9B,uBAAGA,UAAU,oBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,+DAKJ,0BAAMuF,SAAU,SAAAJ,GAAC,OArBxB,SAAAA,GACbA,EAAEK,iBACFgB,EAAcxB,EAAUyB,GAmBiBlB,CAASJ,KAC1B,qDACA,yBAAKnF,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,4DACZL,KAAK,SACLC,MAAOe,EACPnB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,uDAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,WACZL,KAAK,SACLC,MAAOqI,EACPzI,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,8CAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,YACZL,KAAK,cACLC,MAAOuI,EACP3I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,wCAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,WACZL,KAAK,SACLC,MAAOyI,EACP7I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,YACZL,KAAK,UACLC,MAAOwI,EACP5I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,aACZL,KAAK,UACLC,MAAOsI,EACP1I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,2CAEA,yBAAKA,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,cACZL,KAAK,WACLC,MAAOoI,EACPxI,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,wBAAjB,sDAEA,yBAAKA,UAAU,cACX,8BACIA,UAAU,eACV0F,YAAY,4BACZL,KAAK,MACLC,MAAO0I,EACP9I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO3F,UAAU,aAAjB,oCAGJ,yBAAKA,UAAU,QACX,4BAAQoD,QAAS,kBAAMkL,GAAoBD,IACvC7N,KAAK,SAASR,UAAU,6BAD5B,4BAIA,0BAAMA,UAAU,cAAhB,IAA+B,IAA/B,aAIHqO,GACG,kBAAC,WAAD,KACI,6BACI,yBAAKrO,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,sBACZL,KAAK,UACLC,MAAO2I,EAAS/I,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,sBAGrB,2BACIQ,KAAK,OACLR,UAAU,+BACV0F,YAAY,uBACZL,KAAK,WACLC,MAAO4I,EAAUhJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjD,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIQ,KAAK,OACLR,UAAU,+BACV0F,YAAY,sBACZL,KAAK,UACLC,MAAO6I,EAASjJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKnF,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,uBAGrB,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,wBACZL,KAAK,YACLC,MAAO8I,EAAWlJ,SAAU,SAAAC,GAAC,OAAID,EAASC,SAK9D,2BAAO3E,KAAK,SAASR,UAAU,iBA7JnC,IA6JsD,IAClD,kBAAC,IAAD,CAAMyC,GAAG,aAAazC,UAAU,6BAAhC,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAK6C,IAAKC,EAAQ,IAA0B+C,IAAI,GAAG7F,UAAU,sBAK5E2D,IAAOQ,YC1KL3E,G,MAAAA,aAJS,SAACC,GAAD,MAAY,CAClCqC,SAAUrC,EAAMqC,YAGHtC,EA7EK,SAAC,GASd,IAAD,IARJgN,QAQI,IAPFjK,OAAU+E,EAOR,EAPQA,IAAKjC,EAOb,EAPaA,KAAMkH,EAOnB,EAPmBA,OACrBoB,EAME,EANFA,OACAD,EAKE,EALFA,SACAG,EAIE,EAJFA,YACAC,EAGE,EAHFA,QAEFhM,EACI,EADJA,SAEA,OACE,yBAAK0M,cAAc,YACjB,yBAAKxO,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAK6C,IAAK0J,EAAQ1G,IAAI,MAExB,yBAAK7F,UAAU,mBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,mBACZ,gCAASqF,IAEX,uBAAGrF,UAAU,aACX,gCAAS6N,GAAsB,KAEjC,uBAAG7N,UAAU,cACX,gCAAS2N,GADX,IAC6BD,GAE7B,uBAAG1N,UAAU,cACX,gCAAS8N,GADX,iCAKJ,yBAAK9N,UAAU,2BACZ8B,EAASI,oBACR,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEO,GAAE,uBAAkB6E,GACpB9G,KAAK,SACLR,UAAU,8BAEV,uBAAGA,UAAU,0BALf,sBASF,kBAAC,WAAD,KACE,4BACEQ,KAAK,SACLuC,cAAY,UACZ0L,iBAAe,QACfzI,MAAM,yBACNhG,UAAU,0CAEV,uBAAGA,UAAU,0BAPf,sBAWJ,kBAAC,IAAD,CACEyC,GAAE,kBAAa6E,GACf9G,KAAK,SACLR,UAAU,iDAHZ,uBCFKR,eAJS,SAAAC,GAAK,MAAK,CAC9B+M,QAAS/M,EAAM+M,WAGqB,CAACkC,YZ1Bd,yDAAM,WAAMtO,GAAN,eAAAmB,EAAA,+EAEPL,IAAMO,IAAI,gBAFH,OAEnBC,EAFmB,OAIzBtB,EAAS,CACLI,KVzBgB,eU0BhBmB,QAASD,EAAIE,OANQ,gDASzBxB,EAAS,CACLI,KV3BiB,gBU4BjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAXzC,yDAAN,wDY0BZ7G,EAjDE,SAAC,GAAkD,IAAjDkP,EAAgD,EAAhDA,YAAgD,IAAnClC,QAAWmC,EAAwB,EAAxBA,SAAS/B,EAAe,EAAfA,QAMhD,OALAlJ,IACA0F,qBAAU,WACNsF,MACF,CAACA,IAGC,kBAAC,WAAD,KACM9B,EACF,oCAGA,kBAACC,EAAD,OAGC,kBAAC,WAAD,KACQlJ,IAAOO,OACZ,6BAASnE,GAAG,iBACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,4BAAQ0C,MAAO,CAACC,MAAQ,YAAxB,qBAER,wBAAI3C,UAAU,mBAAkB,uBAAGA,UAAU,mBAA7C,2BACA,6BAEgB,MAAZ2O,EACIA,EAAS9O,KAAI,SAAA2M,GAAO,OAChB,kBAAC,EAAD,CAAa1M,IAAK0M,EAAQlF,IAAKkF,QAASA,OAE5C,qDAIf7I,IAAOQ,YCuBTyK,GA/DI,SAAC,GASb,IAAD,IATepC,QASf,IARFjK,OAAU8C,EAQR,EARQA,KAAMkH,EAQd,EARcA,OACZoB,EAOF,EAPEA,OACAD,EAMF,EANEA,SACAG,EAKF,EALEA,YACAC,EAIF,EAJEA,QACAF,EAGF,EAHEA,QACAW,EAEF,EAFEA,OAGJ,OACI,yBAAKvO,UAAU,eACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,YAAY6C,IAAK0J,EAAQ1G,IAAI,MAEhD,yBAAK7F,UAAU,WACX,wBAAIA,UAAU,uBAAsB,gCAASqF,IAC7C,6BACA,wBAAIrF,UAAU,oBAAoB6N,GAClC,6BACA,uBAAG7N,UAAU,iBAAiB2N,EAA9B,KAAwCD,GACxC,uBAAG1N,UAAU,OAAM,gCAAS8N,EAAT,KAAnB,oBACA,yBAAK9N,UAAU,SACV4N,GACG,uBAAG5N,UAAU,OAAOqD,KAAMuK,EAASxI,OAAO,SAASa,IAAI,uBACnD,uBAAGjG,UAAU,wBAGnBuO,GAAUA,EAAON,SACf,uBAAGjO,UAAU,OAAOqD,KAAMkL,EAAON,QAAS7I,OAAO,SAASa,IAAI,uBAC1D,uBAAGjG,UAAU,0BAGnBuO,GAAUA,EAAOL,UACf,uBAAGlO,UAAU,OAAOqD,KAAMkL,EAAOL,SAAU9I,OAAO,SAASa,IAAI,uBAC3D,uBAAGjG,UAAU,kCAGnBuO,GAAUA,EAAOH,WACf,uBAAGpO,UAAU,OAAOqD,KAAMkL,EAAOH,UAAWhJ,OAAO,SAASa,IAAI,uBAC5D,uBAAGjG,UAAU,4BAGnBuO,GAAUA,EAAOJ,SACf,uBAAGnO,UAAU,OAAOqD,KAAMkL,EAAOJ,QAAS/I,OAAO,SAASa,IAAI,uBAC1D,uBAAGjG,UAAU,6BAMjC,yBAAKA,UAAU,mBACX,yBAAK6C,IAAKC,EAAQ,UCxBnB+L,GA7BM,SAAC,GAMf,IAAD,IALFrC,QACIwB,EAIF,EAJEA,IACAD,EAGF,EAHEA,OACS1I,EAEX,EAFE9C,OAAS8C,KAGb,OACI,kBAAC,WAAD,KACI,yBAAKrF,UAAU,WACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAd,OAAkCqF,EAAKyJ,MAAM,KAAK,GAAlD,UACA,uBAAG9O,UAAU,SAASgO,IAE1B,6BACA,yBAAKhO,UAAU,QACX,wBAAIA,UAAU,eAAd,UACA,uBAAGA,UAAU,SAAS+N,KAG9B,+BCQGgB,GA3BW,SAAC,GAIpB,IAAD,IAHFhI,WACIG,EAEF,EAFEA,QAASC,EAEX,EAFWA,SAAUuG,EAErB,EAFqBA,SAAUrG,EAE/B,EAF+BA,KAAM5E,EAErC,EAFqCA,GAAIuG,EAEzC,EAFyCA,YAG3C,OACI,kBAAC,WAAD,KACI,yBAAKhJ,UAAU,sBACX,wBAAIA,UAAU,aAAY,gCAASkH,IACnC,uBAAGlH,UAAU,SACT,kBAAC,IAAD,CAAQoH,OAAO,cAAcC,GADjC,MAES5E,EAAa,kBAAC,IAAD,CAAQ2E,OAAO,cAAc3E,GAArC,OAGd,2BAAG,8CAAH,IAAgC0E,GAChC,2BAAG,8CAAH,IAAgCuG,GAChC,2BAAG,iDAA+B1E,IAEtC,+BCSGgG,GA3BU,SAAC,GAInB,IAAD,IAHFtH,UACIG,EAEF,EAFEA,OAAQC,EAEV,EAFUA,OAAQmF,EAElB,EAFkBA,aAAa5F,EAE/B,EAF+BA,KAAM5E,EAErC,EAFqCA,GAAIuG,EAEzC,EAFyCA,YAG3C,OACI,kBAAC,WAAD,KACI,yBAAKzB,MAAM,sBACP,wBAAIvH,UAAU,aAAY,gCAAS6H,IACnC,uBAAGN,MAAM,SAAQ,kBAAC,IAAD,CAAQH,OAAO,cAAcC,GAA9C,KAES5E,EAAa,kBAAC,IAAD,CAAQ2E,OAAO,cAAc3E,GAArC,OAGd,2BAAG,4CAAH,IAA8BqF,GAC9B,2BAAG,oDAAkCmF,GACrC,2BAAG,iDAA+BjE,IAEtC,+BCyBGxJ,gBAJS,SAAAC,GAAK,MAAK,CAC9BqC,SAAUrC,EAAMqC,YAGoB,CAACmN,ajBmKb,SAAC1I,EAAU2I,GAAX,8CAAwB,WAAM9O,GAAN,SAAAmB,EAAA,+EAErCL,IAAM4F,OAAN,8BAAoCP,EAApC,YAAgD2I,IAFX,OAI5C9O,EAAS,CACLI,KVtLiB,gBUuLjBmB,QAASuN,IAGb9O,EAASD,EAAS,kBAAmB,YATO,gDAW5CC,EAAU,CACNI,KV9LoB,mBU+LpBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAbtB,yDAAxB,wDiBnKb7G,EAzCO,SAAC,GAKhB,IAJH+G,EAIE,EAJFA,SAIE,IAHF6F,OAAU9E,EAGR,EAHQA,IAAKoE,EAGb,EAHaA,KAAMrG,EAGnB,EAHmBA,KAAMkH,EAGzB,EAHyBA,OAAQjE,EAGjC,EAHiCA,KAAMlG,EAGvC,EAHuCA,KACzCN,EAEE,EAFFA,SACAmN,EACE,EADFA,aAGA,OACI,kBAAC,WAAD,KACI,yBAAKjP,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBAAqB6C,IAAK0J,EAAQ1G,IAAI,KACrD,4BAAI,gCAASR,KAEjB,yBAAKrF,UAAU,eACX,2BAAI0L,GACJ,uBAAG1L,UAAU,aAAb,aACgB,kBAAC,IAAD,CAAQoH,OAAO,cAAckB,IAGvB,OAAlBxG,EAASM,MAAiBA,IAASN,EAASM,KAAKkF,KACjD,4BACIlE,QAAS,SAAA+B,GAAC,OAAI8J,EAAa1I,EAAUe,IACrCtH,UAAU,kBAFd,WCSTR,eAAQ,KAAM,CAAC2P,UC1BL,SAAC5I,EAAUvB,GAAX,8CAAwB,WAAM5E,GAAN,iBAAAmB,EAAA,6DACvCqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAHqB,kBAOvBF,IAAMwD,KAAN,8BAAkC6B,GAAYvB,EAAUpB,GAPjC,OAOnClC,EAPmC,OASzCtB,EAAS,CACLI,K7BWc,a6BVdmB,QAASD,EAAIE,KAAKwK,SAGtBhM,EAASD,EAAS,eAAgB,YAdO,gDAgBzCC,EAAU,CACNI,K7BKoB,mB6BJpBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAlBzB,yDAAxB,wDD0BV7G,EA/BI,SAAC,GAA6B,IAA3B+G,EAA0B,EAA1BA,SAAU4I,EAAgB,EAAhBA,UAAgB,EACpBpK,mBAAS,IADW,mBACrC2G,EADqC,KAC/B0D,EAD+B,KAG5C,OACI,kBAAC,WAAD,KACI,yBAAKpP,UAAU,mBACX,0BAAMuF,SAAU,SAAAJ,GACZA,EAAEK,iBACF2J,EAAU5I,EAAU,CAAEmF,SACtB0D,EAAQ,MAER,8BACIpP,UAAU,YACVqF,KAAK,OAAOgK,KAAK,KAAKC,KAAK,IAC3B5J,YAAY,iBACZC,UAAQ,EACRL,MAAOoG,EACPxG,SAAU,SAAAC,GAAC,OAAIiK,EAAQjK,EAAEC,OAAOE,UAGpC,2BAAO9E,KAAK,SAAS8E,MAAM,SAAStF,UAAU,4BE4FnDR,gBANS,SAAAC,GAAK,MAAK,CAC9B+M,QAAS/M,EAAM+M,QACfzK,WAAYtC,EAAMsC,WAClBD,SAAUrC,EAAMqC,YAGoB,CAACwE,kBAA1B9G,EAxGC,SAAC,GAGV,IAFH8G,EAEE,EAFFA,eAEE,IADFkG,QAAU+C,EACR,EADQA,YAAa3C,EACrB,EADqBA,QAAU7K,EAC/B,EAD+BA,WAAWD,EAC1C,EAD0CA,SAAU0N,EACpD,EADoDA,MAMtD,OAJApG,qBAAU,WACN9C,EAAekJ,EAAMC,OAAO1P,MAC9B,CAACuG,EAAgBkJ,EAAMC,OAAO1P,KAG5B,kBAAC,WAAD,KACoB,OAAhBwP,GAAwB3C,EACrB,kBAACC,EAAD,MAEA,kBAAC,WAAD,KACK,6BAAS9M,GAAG,gBACJ,yBAAKwH,MAAM,aACP,yBAAKA,MAAM,mBACP,yBAAKA,MAAM,eACP,kBAAC,IAAD,CAAMA,MAAM,4BAA4B9E,GAAG,aAA3C,oBACCX,EAASI,oBACN,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMO,GAAE,uBAAkB8M,EAAYhN,OAAO+E,KAAO9G,KAAK,SAASR,UAAU,6BAA4B,uBAAGA,UAAU,0BAArH,sBAGA,kBAAC,WAAD,KACI,uBAAGqD,KAAK,IAAIN,cAAY,UAAU0L,iBAAe,QAAQzI,MAAM,yBAAyBhG,UAAU,sCAC9F,uBAAGA,UAAU,0BADjB,sBAMX+B,EAAWM,wBACqB,IAA7BN,EAAWO,eACXP,EAAWQ,OAAO+E,MAAQiI,EAAYhN,OAAO+E,KACzC,kBAAC,IAAD,CAAM7E,GAAG,gBAAgBzC,UAAU,kCAC/B,uBAAGuH,MAAM,kBAIzB,kBAAC,GAAD,CAAYiF,QAAS+C,IACrB,kBAAC,GAAD,CAAc/C,QAAS+C,IACvB,yBAAKvP,UAAU,WACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,sBAAd,cACCuP,EAAYxI,WAAWnH,OAAS,EACzB,kBAAC,WAAD,KACK2P,EAAYxI,WAAWlH,KAAI,SAAAkH,GAAU,OAClC,kBAAC,GAAD,CAAmBjH,IAAKiH,EAAWO,IAAKP,WAAYA,QAI5D,0DAIZ,yBAAK/G,UAAU,cACX,wBAAIA,UAAU,sBAAd,aACCuP,EAAY7H,UAAU9H,OAAS,EACxB,kBAAC,WAAD,KACK2P,EAAY7H,UAAU7H,KAAI,SAAA6H,GAAS,OAChC,kBAAC,GAAD,CAAkB5H,IAAK4H,EAAUJ,IAAKI,UAAWA,QAIzD,0DAKhB,yBAAKH,MAAM,kBACH,wBAAIA,MAAM,sBAAV,mBACEzF,EAASI,oBAEJ,kBAAC,GAAD,CAAYqE,SAAUgJ,EAAYhN,OAAO+E,MACxC,GAGJiI,EAAYnD,OAAOvM,KAAI,SAAAyM,GAAG,OACtB,kBAAC,GAAD,CAAexM,IAAKwM,EAAIhF,IAAK8E,OAAQE,EAAK/F,SAAUiJ,EAAMC,OAAO1P,iB,SC/DtGP,gBAJS,SAAAC,GAAK,MAAK,CAC9BsC,WAAYtC,EAAMsC,cAGPvC,EAtBY,SAAC,GAAD,IAAakQ,EAAb,EAAEC,UAAF,IACvB5N,WAAaM,EADU,EACVA,sBAAuBC,EADb,EACaA,cACjCsN,EAFoB,kDAGnB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAU,SAAA/G,GAAK,OACVzG,GAA0BC,EAGvB,kBAACoN,EAAc5G,GAFf,kBAAC,IAAD,CAAUrG,GAAG,wBCkClBjD,eAAQ,KAAM,CAACsQ,kBCOG,SAACC,GAAD,8CAAmB,WAAM3P,GAAN,eAAAmB,EAAA,+EAE1BL,IAAM4F,OAAN,wBAA8BiJ,IAFJ,OAEtCrO,EAFsC,OAG5CtB,EAAS,CACLI,KjC5BuB,sBiC6BvBmB,QAASD,EAAIE,OAGjBxB,EAASD,EAAS,sBAAuB,YARG,gDAU5CC,EAAS,CACLI,KjCpCqB,oBiCqCrBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAZtB,iEAAnB,wDDPlB7G,EAxCU,SAAC,GAEf,IADHwQ,EACE,EADFA,YAAaF,EACX,EADWA,kBAGXG,EAAeD,EAAYnQ,KAAI,SAAAqQ,GAAK,OACtC,yBAAKpQ,IAAKoQ,EAAMnQ,GAAIC,UAAU,aAC1B,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMyC,GAAE,kBAAayN,EAAM3N,SACvB,yBAAKM,IAAKqN,EAAM3D,OAAQ1G,IAAI,MAEhC,wBAAI7F,UAAU,eAAc,gCAASkQ,EAAM7K,QAE/C,yBAAKrF,UAAU,mBACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,mBAAkB,gCAASkQ,EAAM/H,cAC/C,uBAAGnI,UAAU,aAAY,kDAAwBkQ,EAAM9H,aACvD,uBAAGpI,UAAU,cAAa,yCAAuBkQ,EAAM7H,KACvD,uBAAGrI,UAAU,cAAa,4CAA0BkQ,EAAM7J,QAC1D,uBAAGrG,UAAU,cAAa,0CAAuB,kBAAC,IAAD,CAAQoH,OAAO,cAAc8I,EAAM5H,OACpF,uBAAGtI,UAAU,cAAa,gDAA8BkQ,EAAM3H,aAGtE,yBAAKvI,UAAU,UACX,uBAAGA,UAAU,cAAa,iDAA+BkQ,EAAMlH,aAC/D,4BAAQ5F,QAAS,kBAAM0M,EAAkBI,EAAM5I,MAAM9G,KAAK,SAASR,UAAU,8BAA7E,eAIZ,OACI,kBAAC,WAAD,KACKiQ,MEoCEzQ,gBALS,SAAAC,GAAK,MAAK,CAC9BqC,SAAUrC,EAAMqC,SAChBkO,YAAavQ,EAAMuQ,eAGiB,CAACG,gBD7DV,yDAAM,WAAM/P,GAAN,eAAAmB,EAAA,+EAEXL,IAAMO,IAAI,iBAFC,OAEvBC,EAFuB,OAG7BtB,EAAS,CACLI,KjCWoB,mBiCVpBmB,QAASD,EAAIE,OALY,gDAS7BxB,EAAS,CACLI,KjCOqB,oBiCNrBmB,QAAS,CAACzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAXpC,iEAAN,uDC6D2B+J,kBDDzB,yDAAM,WAAMhQ,GAAN,SAAAmB,EAAA,0DAChCmL,OAAOC,QAAQ,yCADiB,0CAGrBzL,IAAM4F,OAAO,iBAHQ,OAK3B1G,EAAS,CACLI,KjC3CmB,wBiC8CvBJ,EAASD,EAAS,gCAAiC,YATxB,gDAW3BC,EAAU,CACNI,KjCvDiB,oBiCwDjBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAbvC,yDAAN,wDCClB7G,EAhEM,SAAC,GAKf,IAJH2Q,EAIE,EAJFA,gBACAC,EAGE,EAHFA,kBACWhO,EAET,EAFFN,SAAWM,KAET,IADF4N,YAAcC,EACZ,EADYA,aAAcrD,EAC1B,EAD0BA,QAQ5B,OALAlJ,IACA0F,qBAAU,WACN+G,MACD,CAACA,IAGA,kBAAC,WAAD,KACMvD,GAA4B,OAAjBqD,EAAwB,kBAACpD,EAAD,MACjC,kBAAC,WAAD,KACKlJ,IAAOO,OACR,6BAASnE,GAAG,aACR,yBAAKwH,MAAM,aACP,yBAAKA,MAAM,kBACP,4BAAI,iDACJ,wBAAIA,MAAM,mBAAkB,uBAAGA,MAAM,0BAA6B,IAC7DnF,GAASA,EAAKiD,KAAKyJ,MAAM,KAAK,GAAGuB,oBADtC,mBAEA,yBAAKrQ,UAAU,OAAO0C,MAAO,CAACiJ,QAAQ,OAAQ2E,eAAe,aACzD,4BAAQtQ,UAAU,iBAAiBoD,QAAS,kBAAMgN,MAC9C,uBAAGpQ,UAAU,sBADjB,uBAMR,yBAAKuH,MAAM,kBACP,6BACkB,OAAjB0I,GAA8D,IAArCA,EAAaA,aAAarQ,OAChD,yBAAK2H,MAAM,YACH,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAkByI,YAAaC,EAAaA,iBAIpD,wBAAIvN,MAAO,CAACC,MAAM,YAAlB,+BAMnBgB,IAAOQ,YCgEb3E,eAAQ,KAAM,CAAC+Q,eFzFA,SAAChK,EAAUvB,EAAUyB,GAArB,8CAAiC,WAAMrG,GAAN,iBAAAmB,EAAA,6DACrDqC,EAAS,CACXxC,QAAS,CACL,eAAgB,qBAHmC,kBAOrCF,IAAMwD,KAAN,2BAA+B6B,GAAWvB,EAAUpB,GAPf,OAOjDlC,EAPiD,OAQvDtB,EAAS,CACLI,KjCVoB,mBiCWpBmB,QAASD,EAAIE,OAGjBxB,EAASD,EAAS,qBAAsB,YACxCsG,EAAQE,KAAK,gBAd0C,kDAiBvDvG,EAAS,CACLI,KjClBqB,oBiCmBrBmB,QAAS,CAAEzB,IAAK,KAAI0E,SAASwB,WAAYC,OAAQ,KAAIzB,SAASyB,UAnBX,kEAAjC,wDEyFf7G,EA/GF,SAAC,GAAiD,IAAhDgN,EAA+C,EAA/CA,QAASjG,EAAsC,EAAtCA,SAASE,EAA6B,EAA7BA,QAAS8J,EAAoB,EAApBA,eAAoB,EAE1BxL,mBAAS,CACrCoD,YAAa,GACbC,WAAY,GACZC,IAAI,GACJhC,OAAO,GACPiC,KAAK,GACLU,YAAY,KAR0C,mBAEnDhE,EAFmD,KAEzCC,EAFyC,KAYtDkD,EAMAnD,EANAmD,YACAC,EAKApD,EALAoD,WACAC,EAIArD,EAJAqD,IACAhC,EAGArB,EAHAqB,OACAiC,EAEAtD,EAFAsD,KACAU,EACAhE,EADAgE,YAGE9D,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAE9B,OACI,kBAAC,WAAD,KACA,6BACI,yBAAKtF,UAAU,kBACX,4BAAI,qDAEJ,uBAAGA,UAAU,QAAb,6DAGJ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BAA4B6C,IAAK2J,EAAQD,OAAQ1G,IAAI,KACpE,uBAAG7F,UAAU,QAAO,gCAASwM,EAAQnH,SAGzC,0BAAME,SAAU,SAAAJ,GACZA,EAAEK,iBACF+K,EAAehK,EAAUvB,EAAUyB,KAEnC,qDACA,yBAAKzG,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,iBACZL,KAAK,cACLC,MAAO6C,EACPjD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAE5B,yBAAKnF,UAAU,cACf,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,gBACZL,KAAK,aACLC,MAAO8C,EACPlD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAE5B,yBAAKnF,UAAU,cACX,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,QACZL,KAAK,MACLC,MAAO+C,EACPnD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhC,yBAAKnF,UAAU,cACX,2BACIQ,KAAK,OACLR,UAAU,eACV0F,YAAY,WACZL,KAAK,SACLC,MAAOe,EACPnB,SAAU,SAAAC,GAAC,OAAID,EAASC,MACxB,2BAAOnF,UAAU,aAAjB,kDAEJ,oCACJ,yBAAKA,UAAU,cACX,2BACIQ,KAAK,OACLR,UAAU,eACVqF,KAAK,OACLC,MAAOgD,EACPpD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhC,yBAAKnF,UAAU,cACX,8BACIA,UAAU,eACV0F,YAAY,+BACZL,KAAK,cACLC,MAAO0D,EACP9D,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE5B,2BAAOnF,UAAU,aAAjB,sCAEJ,2BAAOQ,KAAK,SAAS8E,MAAM,SAAStF,UAAU,iBAAkB,IAChE,kBAAC,IAAD,CAAMyC,GAAG,YAAYjC,KAAK,SAASR,UAAU,6BAA7C,YAEJ,iCCnDGR,gBAJS,SAAAC,GAAK,MAAK,CAC9B+M,QAAS/M,EAAM+M,WAGqB,CAAClG,kBAA1B9G,CAA2CwN,aAjDlC,SAAC,GAKlB,IAJH1G,EAIE,EAJFA,eACUiJ,EAGR,EAHF/C,QAAU+C,YACVC,EAEE,EAFFA,MACA/I,EACE,EADFA,QASA,OANA/C,IAEA0F,qBAAU,WACN9C,EAAekJ,EAAMC,OAAO1P,MAC9B,CAACuG,EAAgBkJ,EAAMC,OAAO1P,KAG5B,kBAAC,WAAD,KACK4D,IAAOO,OACR,6BAASnE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAES,OAAhBuP,EAEI,kBAAC,GAAD,CAAM/C,QAAS+C,EAAYhN,OAAQkE,QAASA,EAASF,SAAUgJ,EAAYhN,OAAO+E,MAElF,IAIZ,yBAAKtH,UAAU,YACX,yBAAK6C,IAAKC,EAAQ,KAA2B+C,IAAI,GAAG7F,UAAU,sBAK7E2D,IAAOQ,YChBL3E,gBAJS,SAAAC,GAAK,MAAK,CAC9BqC,SAAUrC,EAAMqC,YAGLtC,EAtBU,SAAC,GAAD,IAAakQ,EAAb,EAAEC,UAAF,IACrB7N,SAAWI,EADU,EACVA,oBAAqBC,EADX,EACWA,YAC7ByN,EAFkB,gDAGjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAU,SAAA/G,GAAK,OACV5G,GAAwBC,EAGrB,kBAACuN,EAAc5G,GAFf,kBAAC,IAAD,CAAUrG,GAAG,sB,oCCX3B+N,GAAe,GCUfA,GAAe,CACjBvP,MAAOO,aAAaiP,QAAQ,SAC5BpO,sBAAuB,KACvBC,eAAe,EACfC,OAAQ,MCLNiO,GAAe,CACjBvP,MAAOO,aAAaiP,QAAQ,SAC5BvO,oBAAqB,KACrBC,aAAa,EACbC,KAAM,MCHJoO,GAAe,CACjBjB,YAAa,KACb/C,QAAS,KACTmC,SAAU,GACV/B,SAAS,EACT9H,MAAO,ICVL4L,GAAc,CAChBT,aAAc,KACdrD,SAAS,EACT9H,MAAO,ICHI6L,8BAAgB,CAC3BhR,MLJW,WAAyC,IAA/BF,EAA8B,uDAAtB+Q,GAAcI,EAAQ,uCAC5CpQ,EAAiBoQ,EAAjBpQ,KAAMmB,EAAWiP,EAAXjP,QACb,OAAQnB,GACJ,ItCPiB,YsCQb,MAAM,GAAN,oBAAWf,GAAX,CAAkBkC,IACtB,ItCRoB,esCShB,OAAOlC,EAAMoR,QAAO,SAAAlR,GAAK,OAAIA,EAAMI,KAAO4B,KAC9C,QACI,OAAOlC,IKHfsC,WJUW,WAAwC,IAA/BtC,EAA8B,uDAAtB+Q,GAAcI,EAAQ,uCAC3CpQ,EAAiBoQ,EAAjBpQ,KAAMmB,EAAWiP,EAAXjP,QACb,OAAQnB,GACJ,IvChBqB,gBuCiBjB,OAAO,2BACAf,GADP,IAEI4C,uBAAuB,EACvBC,eAAe,EACfC,OAAQZ,IAEhB,IvCzB+B,0BuC0B/B,IvCtB4B,uBuCwBxB,OADAH,aAAasP,QAAQ,QAASnP,EAAQV,OAC/B,uCACAxB,GACAkC,GAFP,IAGIU,uBAAuB,EACvBC,eAAe,IAEvB,IvCjC4B,uBuCkC5B,IvC9ByB,oBuC+BzB,IvCvBsB,iBuCyBlB,OADAd,aAAauP,WAAW,SACjB,2BACAtR,GADP,IAEIwB,MAAO,KACPoB,uBAAuB,EACvBC,eAAe,IAEvB,IvCtCqB,gBuCuCrB,IvC1CyB,oBuC4CrB,OADAd,aAAauP,WAAW,SACjB,2BACAtR,GADP,IAEIwB,MAAO,KACPoB,uBAAuB,EACvBC,eAAe,IAEvB,QACI,OAAO7C,IIhDfqC,SHQW,WAAwC,IAA/BrC,EAA8B,uDAAtB+Q,GAAcI,EAAQ,uCAC3CpQ,EAAiBoQ,EAAjBpQ,KAAMmB,EAAWiP,EAAXjP,QACb,OAAQnB,GACJ,IxCCmB,cwCAf,OAAO,2BACAf,GADP,IAEIyC,qBAAqB,EACrBC,aAAa,EACbC,KAAMT,IAEd,IxCR6B,wBwCS7B,IxCL0B,qBwCOtB,OADAH,aAAasP,QAAQ,QAASnP,EAAQV,OAC/B,uCACAxB,GACAkC,GAFP,IAGIO,qBAAqB,EACrBC,aAAa,IAErB,IxChB0B,qBwCiB1B,IxCbuB,kBwCenB,OADAX,aAAauP,WAAW,SACjB,2BACAtR,GADP,IAEIwB,MAAO,KACPiB,qBAAqB,EACrBC,aAAa,IAErB,IxCvBuB,kBwCwBvB,IxCrBmB,cwCsBnB,IxCb2B,sBwCevB,OADAX,aAAauP,WAAW,SACjB,2BACAtR,GADP,IAEIwB,MAAO,KACPiB,qBAAqB,EACrBC,aAAa,IAErB,QACI,OAAO1C,IG9Cf+M,QFSW,WAAyC,IAA/B/M,EAA8B,uDAAtB+Q,GAAcI,EAAQ,uCAC5CpQ,EAAiBoQ,EAAjBpQ,KAAMmB,EAAWiP,EAAXjP,QAEb,OAAQnB,GACJ,IzCbmB,cyCcnB,IzCXsB,iByCYlB,OAAO,2BACAf,GADP,IAEI+M,QAAS7K,EACTiL,SAAS,IAEjB,IzCnByB,oByCoBrB,OAAO,2BACAnN,GADP,IAEI8P,YAAa5N,EACbiL,SAAS,IAGjB,IzCPkB,ayCQd,OAAO,2BACAnN,GADP,IAEI8P,YAAY,2BAAM9P,EAAM8P,aAAb,IAA0BnD,OAAQzK,IAC7CiL,SAAS,IAEjB,IzCXqB,gByCYjB,OAAO,2BACAnN,GADP,IAEI8P,YAAY,2BACL9P,EAAM8P,aADF,IAEPnD,OAAQ3M,EAAM8P,YAAYnD,OAAOyE,QAAO,SAAAG,GAAO,OAAIA,EAAQ1J,MAAQ3F,OAEvEiL,SAAS,IAEjB,IzCxCoB,eyCyChB,OAAO,2BACAnN,GADP,IAEIkP,SAAUhN,EACViL,SAAS,IAEjB,IzC3CqB,gByC4CrB,IzC5BwB,mByC6BpB,OAAO,2BACAnN,GADP,IAEIqF,MAAOnD,EACPiL,SAAS,IAEjB,IzCnDqB,gByCoDjB,OAAO,2BACAnN,GADP,IAEI+M,QAAS,KACTI,SAAS,IAGjB,QACI,OAAOnN,IE9DfuQ,YDCW,WAAqC,IAA5BvQ,EAA2B,uDAArBiR,GAAaE,EAAQ,uCACxCpQ,EAAiBoQ,EAAjBpQ,KAAMmB,EAAWiP,EAAXjP,QAEb,OAAOnB,GACH,I1CUwB,mB0CJxB,I1CKwB,mB0CCxB,I1CC2B,sB0CAvB,OAAO,2BACAf,GADP,IAEIwQ,aAActO,EACdiL,SAAS,IAEjB,I1CNyB,oB0COrB,OAAO,2BACAnN,GADP,IAEIqF,MAAOnD,EACPiL,SAAS,IAEjB,QACI,OAAOnN,MEnCbwR,GAAa,CAACC,MAILC,GAFDC,uBAAYC,GAJL,GAIgCC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCqBxFzP,aAAaP,OACfD,EAAaQ,aAAaP,OAG5B,IA2EeuQ,GA3EH,WAMV,OALApI,qBAAU,WACR+H,GAAM/Q,SAASkB,KACf6P,GAAM/Q,SAASyB,OACd,IAGD,oCACS,6BAEO,kBAAC,qBAAD,OAGhB,kBAAC,IAAD,CAAUsP,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAI/B,UAAWgC,IACjC,yBAAK3R,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyR,OAAK,EAACC,KAAK,aAAa/B,UAAWiC,IAC1C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,eAAe/B,UAAWkC,IAC5C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,kBAAkB/B,UAAWmC,IAC/C,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,gBAAgB/B,UAAWoC,IAC7C,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,YAAY/B,UAAWqC,IACzC,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,cAAc/B,UAAWsC,KAC3C,kBAAC,GAAD,CACER,OAAK,EACLC,KAAK,aACL/B,UAAWuC,IAEb,kBAAC,GAAD,CACET,OAAK,EACLC,KAAK,iBACL/B,UAAWwC,IAEb,kBAAC,GAAD,CACEV,OAAK,EACLC,KAAK,kBACL/B,UAAWyC,IAEb,kBAAC,GAAD,CACEX,OAAK,EACLC,KAAK,kBACL/B,UAAW0C,IAEb,kBAAC,GAAD,CACEZ,OAAK,EACLC,KAAK,gBACL/B,UAAW2C,IAEb,kBAAC,GAAD,CACEb,OAAK,EACLC,KAAK,eACL/B,UAAW4C,KAEb,kBAAC,GAAD,CACEd,OAAK,EACLC,KAAK,mBACL/B,UAAW6C,KAEP,4C,OC1FpBC,IAAS5C,OACP,kBAAC,IAAM6C,WAAP,KAEE,kBAAC,GAAD,OAGFC,SAASC,eAAe,U,wCCb1BtT,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.87b26318.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_doctor_kw5l.4e091d0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/coughing_2.b6dd53fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor8.e99223a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/newDoctor1.45a94407.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_forms_78yw.6e6a5db0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Noprofile.5d35e399.gif\";","module.exports = __webpack_public_path__ + \"static/media/graduation.fda680d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_medical_research_qg4d.41b3f391.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor4.0211ccbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.c4335da9.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\nimport { Store } from 'react-notifications-component';\r\n\r\nexport const setAlert = (msg, alertType, timeOut=5000) => dispatch => {\r\n\r\n\r\n\r\n    Store.addNotification({\r\n        // title: `${msg}`,\r\n       message: `${msg}`,\r\n       type: `${alertType}`,\r\n       insert: \"top\",\r\n       container: \"top-right\",\r\n       animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n       animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n       dismiss: {\r\n         duration: 2000,\r\n         onScreen: true\r\n       }\r\n     });\r\n    \r\n};\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_USER_ERROR,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n    LOGOUT_USER,\r\n    CLEAR_USER_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/authUser');\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_USER_ERROR\r\n        });\r\n    }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({ name, email, password });\r\n    try {\r\n        const res = await axios.post('./api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({ email, password });\r\n    try {\r\n        const res = await axios.post('/api/authUser', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_USER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({ \r\n            type: LOGIN_USER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Logout/ clear Profile\r\nexport const logout_user = () => dispatch => {\r\n\r\n  dispatch(setAlert(\"LogOut Sucessfully\" ,'success'))\r\n  \r\n    dispatch({\r\n        type: CLEAR_USER_PROFILE\r\n    });\r\n    dispatch({\r\n        type: LOGOUT_USER\r\n    });\r\n}","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\n// Doctor action types\r\nexport const REGISTER_DOCTOR_SUCCESS = 'REGISTER_DOCTOR_SUCCESS';\r\nexport const REGISTER_DOCTOR_FAIL = 'REGISTER_DOCTOR_FAIL';\r\nexport const DOCTOR_LOADED = 'DOCTOR_LOADED';\r\nexport const AUTH_DOCTOR_ERROR = 'AUTH_DOCTOR_ERROR';\r\nexport const LOGIN_DOCTOR_SUCCESS = 'LOGIN_DOCTOR_SUCCESS';\r\nexport const LOGIN_DOCTOR_FAIL = 'LOGIN_DOCTOR_FAIL';\r\nexport const LOGOUT_DOCTOR = 'LOGOUT_DOCTOR';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILE_BY_ID = 'GET_PROFILE_BY_ID';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\r\n\r\n// User action types\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_USER_ERROR = 'AUTH_USER_ERROR';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const GET_APPOINTMENTS = 'GET_APPOINTMENTS';\r\nexport const ADD_APPOINTMENTS = 'ADD_APPOINTMENTS';\r\nexport const APPOINTMENT_ERROR = 'APPOINTMENT_ERROR';\r\nexport const UPDATE_APPOINTMENTS = 'UPDATE_APPOINTMENTS';\r\nexport const ADD_REVIEW = 'ADD_REVIEW';\r\nexport const ADD_REVIEW_ERROR = 'ADD_REVIEW_ERROR';\r\nexport const REMOVE_REVIEW = 'REMOVE_REVIEW';\r\nexport const CLEAR_USER_PROFILE = 'CLEAR_USER_PROFILE';\r\nexport const DELETE_USER_ACCOUNT = 'DELETE_USER_ACCOUNT';","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    REGISTER_DOCTOR_SUCCESS,\r\n    REGISTER_DOCTOR_FAIL,\r\n    DOCTOR_LOADED,\r\n    AUTH_DOCTOR_ERROR,\r\n    LOGIN_DOCTOR_SUCCESS,\r\n    LOGIN_DOCTOR_FAIL,\r\n    LOGOUT_DOCTOR,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load Doctors\r\nexport const loadDoctor = () => async dispatch => {\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/authDoctor');\r\n\r\n        dispatch({\r\n            type: DOCTOR_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_DOCTOR_ERROR\r\n        });\r\n    }\r\n};\r\n\r\n// Register Doctor\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({ name, email, password });\r\n    try {\r\n        const res = await axios.post('/api/doctors', body, config);\r\n   \r\n        \r\n        dispatch({\r\n            type: REGISTER_DOCTOR_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadDoctor());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_DOCTOR_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Login Doctor\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({ email, password });\r\n    try {\r\n        const res = await axios.post('/api/authDoctor', body, config);\r\n        \r\n        dispatch({\r\n            type: LOGIN_DOCTOR_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        dispatch(loadDoctor());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({ \r\n            type: LOGIN_DOCTOR_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n// Logout/ clear Profile\r\nexport const logout_doctor = () => dispatch => {\r\n    dispatch(setAlert(\"LogOut Sucessfully\" ,'success'))\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n    dispatch({\r\n        type: LOGOUT_DOCTOR\r\n    });\r\n}","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout_user } from \"../../actions/authUser\";\r\nimport { logout_doctor } from \"../../actions/authDoctor\";\r\n\r\nimport \"../../App.css\";\r\n\r\nconst Navbar = ({\r\n  authUser: { isUserAuthenticated, loadingUser, user },\r\n  logout_user,\r\n  authDoctor: { isDoctorAuthenticated, loadingDoctor, doctor },\r\n  logout_doctor,\r\n}) => {\r\n  const authUserLinks = (\r\n    <Fragment>\r\n      <Link className=\"nav-logo\" to=\"/appointment\" style={{color: \"#6C63FF\"}}>\r\n       <p style={{color: \"#6C63FF\"}}>  Cure Me </p>\r\n        <img\r\n          className=\"nav-log-img\"\r\n          style={{ width: \"3.2rem\" }}\r\n          src={require(\"./doctor (1).png\")}\r\n        />\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/profiles\" className=\"nav-link\">\r\n              Doctors\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/appointment\" className=\"nav-link \">\r\n              Appointments\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <a\r\n              className=\"nav-link font-weight-bolder\"\r\n              onClick={logout_user}\r\n              href=\"\"\r\n            >\r\n              <i className=\"fas fa-sign-out-alt\" /> <span>Logout</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const authDoctorLinks = (\r\n    <Fragment>\r\n      <Link className=\"nav-logo\" to=\"/dashboard\" style={{color: \"#6C63FF\"}}>\r\n        Cure Me\r\n        <img\r\n          className=\"nav-log-img\"\r\n          style={{ width: \"3.2rem\" }}\r\n          src={require(\"./doctor (1).png\")}\r\n        />\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/dashboard\" className=\"nav-link \">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/profiles\" className=\"nav-link\">\r\n              Doctors\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item dropdown active\">\r\n            <Link\r\n              className=\"nav-link dropdown-toggle\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Update Profile\r\n            </Link>\r\n            <div\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"navbarDropdownMenuLink\"\r\n            >\r\n              <Link className=\"dropdown-item\" to=\"/edit-Profile\">\r\n                <i className=\"far fa-id-card\"></i> Edit Profile\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to=\"/add-Education\">\r\n                <i className=\"fas fa-university\"></i> Add Education\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to=\"/add-Experience\">\r\n                {\" \"}\r\n                <i className=\"fab fa-black-tie\"></i> Add Experience\r\n              </Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <a\r\n              className=\"nav-link font-weight-bolder\"\r\n              onClick={logout_doctor}\r\n              href=\"\"\r\n            >\r\n              <i className=\"fas fa-sign-out-alt\" /> <span>Logout</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <Link className=\"nav-logo\" to=\"/\">\r\n        Cure Me\r\n        <img\r\n          className=\"nav-log-img\"\r\n          style={{ width: \"3.2rem\" }}\r\n          src={require(\"./doctor (1).png\")}\r\n        />\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link to=\"/profiles\" className=\"nav-link\">\r\n              Doctors\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item dropdown active\">\r\n            <Link\r\n              className=\"nav-link dropdown-toggle\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Log in\r\n            </Link>\r\n            <div\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"navbarDropdownMenuLink\"\r\n            >\r\n              <Link className=\"dropdown-item\" to=\"/loginUser\">\r\n                <i className=\"fas fa-users\"></i> Login as User\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to=\"/loginDoctor\">\r\n                <i className=\"fas fa-user-md\"></i> Login as Doctor\r\n              </Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item dropdown active\">\r\n            <Link\r\n              className=\"nav-link dropdown-toggle\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Register\r\n            </Link>\r\n            <div\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"navbarDropdownMenuLink\"\r\n            >\r\n              <Link className=\"dropdown-item\" to=\"/registerUser\">\r\n                <i className=\"fas fa-users\"></i> Register as User\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to=\"/registerDoctor\">\r\n                <i className=\"fas fa-user-md\"></i> Register as Doctor\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"main navbar sticky-top navbar-expand-sm navbar-dark bg-dark mb-3\">\r\n      <div className=\"container\">\r\n        {isUserAuthenticated || isDoctorAuthenticated ? (\r\n          <Fragment>\r\n            {!loadingUser && (\r\n              <Fragment>\r\n                {isUserAuthenticated ? authUserLinks : authDoctorLinks}\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        ) : (\r\n          guestLinks\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nNavbar.propTypes = {\r\n  logout_user: PropTypes.func.isRequired,\r\n  logout_doctor: PropTypes.func.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n  authDoctor: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authUser: state.authUser,\r\n  authDoctor: state.authDoctor,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout_user, logout_doctor })(Navbar);\r\n","import topbar from \"topbar\";\r\n\r\nconst DarkTopLoaderBar = () => {\r\n\r\n    topbar.config({\r\n        autoRun      : true,\r\n        barThickness : 4,\r\n        barColors    : {\r\n            '0'      : '#5680e9',\r\n            '.25'    : '#5680e9',\r\n            '.50'    : '#5680e9',\r\n            '.75'    : '#5680e9',\r\n            '1.0'    : '#5680e9'\r\n        },\r\n         shadowBlur   : 5,\r\n        shadowColor  : 'rgba(0,   0,   0,   .6)'\r\n      })\r\n};\r\n\r\nexport default DarkTopLoaderBar","import React, { Fragment } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport topbar from \"topbar\";\r\nimport DarkTopLoaderBar from \"../../topbar/topbar\";\r\n\r\nimport \"../../App.css\";\r\n\r\n\r\nconst Landing = ({ isDoctorAuthenticated, isUserAuthenticated }) => {\r\nDarkTopLoaderBar();\r\n\r\n  if (isDoctorAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  } else if (isUserAuthenticated) {\r\n    return <Redirect to=\"/appointment\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {topbar.show()}\r\n      <section id=\"landing\">\r\n        <div className=\"container\">\r\n          <div className=\"img\">\r\n            <div className=\"img-1\">\r\n              <img src={require(\"../../img/undraw_doctor_kw5l.svg\")} />\r\n            </div>\r\n          </div>\r\n          <div className=\"heading\">\r\n            <h1 className=\"main-heading\">Find Your Best Doctor &</h1>\r\n            <h1 className=\"main-heading\">\r\n              Book Your <span className=\"main-span\">Appointment.</span>\r\n            </h1>\r\n          </div>\r\n          <div className=\"landing-position\">\r\n            <div className=\"signup\">\r\n              <div className=\"doctor-signup\">\r\n                <h2 className=\" item heading-sub\">\r\n                  <strong>For Doctors</strong>\r\n                </h2>\r\n                <p className=\"item description\">\r\n                 Patients Waiting For Your Best Service\r\n                </p>\r\n\r\n                <Link\r\n                  to=\"/registerDoctor\"\r\n                  type=\"button\"\r\n                  className=\"item btn btn-info landing-btn \"\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n              </div>\r\n              <div className=\"user-signup\">\r\n                <h2 className=\"item heading-sub\">\r\n                  <strong>For Users</strong>\r\n                </h2>\r\n                <p className=\"item special description\">\r\n               Get yourself treated by Best Doctors \r\n                </p>\r\n                <Link\r\n                  to=\"/registerUser\"\r\n                  className=\"item btn btn-outline-info landing-btn\"\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n        <br />\r\n      </section>\r\n      {topbar.hide()}\r\n    </Fragment>\r\n  );\r\n};\r\nLanding.propTypes = {\r\n  isDoctorAuthenticated: PropTypes.bool.isRequired,\r\n  isUserAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isDoctorAuthenticated: state.authDoctor.isDoctorAuthenticated,\r\n  isUserAuthenticated: state.authUser.isUserAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { useState, Fragment } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../actions/authUser';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\nimport { Store } from 'react-notifications-component';\r\n\r\nconst LoginUser = ({ login, isUserAuthenticated }) => {\r\n    DarkTopLoaderBar();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formData;\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login(email,password);\r\n    }\r\n\r\n    // Redirect if login\r\n    if(isUserAuthenticated) {\r\n        \r\n       Store.addNotification({\r\n               \r\n            message: \"Login Sucessful\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"bottom-center\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 2000,\r\n              onScreen: true\r\n            }\r\n          });\r\n        return <Redirect to=\"/profiles\" />\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                    <div className=\"common-form\">\r\n                        <div className=\"form-side\">\r\n                            <div className=\"heading-common\">\r\n                                <h1><strong style={{color: \"#6C63FF\"}} >Log in User</strong>{' '}\r\n                                    <i className=\"fas fa-sign-in-alt\"></i>\r\n                                </h1>\r\n                            </div>\r\n                            <form onSubmit={e => onSubmit(e)}>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputEmail1\">Email address</label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your email address.\" \r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={e => onChange(e)}\r\n                                    required\r\n                                />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputPassword1\">Password</label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your password.\" \r\n                                    name=\"password\"\r\n                                    minLength=\"6\"\r\n                                    value={password}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Log In\" />\r\n                                <p>Or {' '}\r\n                                <Link to=\"/\">Create a new account</Link></p>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"img-side\">\r\n                            <img src={require(\"../../img/coughing_2.svg\")} alt=\"\" className=\"register-user\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>    \r\n            {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLoginUser.propTypes ={\r\n    login: PropTypes.func.isRequired,\r\n    isUserAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n    isUserAuthenticated: state.authUser.isUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(LoginUser);\r\n","import React, { useState, Fragment } from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {login} from '../../actions/authDoctor';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\nimport { Store } from 'react-notifications-component';\r\nconst LoginDoctor = ({ login, isDoctorAuthenticated }) => {\r\n    DarkTopLoaderBar();\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formData;\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login(email,password);\r\n    }\r\n\r\n    // Redirect if login\r\n    if(isDoctorAuthenticated) {\r\n     \r\n        \r\n            Store.addNotification({\r\n               \r\n               message: \"Login Sucessful\",\r\n               type: \"success\",\r\n               insert: \"top\",\r\n               container: \"bottom-center\",\r\n               animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n               animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n               dismiss: {\r\n                 duration: 2000,\r\n                 onScreen: true\r\n               }\r\n             });\r\n        return  <Redirect to=\"/dashboard\" />\r\n\r\n            \r\n           \r\n           \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                    <div className=\"common-form\">\r\n                        <div className=\"form-side\">\r\n                            <div className=\"heading-common\">\r\n                                <h1><strong>Log in Doctor </strong>\r\n                                    <i className=\"fas fa-sign-in-alt\"></i>\r\n                                </h1>\r\n                            </div>\r\n                            <form onSubmit={e => onSubmit(e)}>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputEmail1\">Email address</label>\r\n                                <input \r\n                                    type=\"email\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your email address.\" \r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={e => onChange(e)}\r\n                                    required\r\n                                />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputPassword1\">Password</label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your password.\" \r\n                                    name=\"password\"\r\n                                    minLength=\"6\"\r\n                                    value={password}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Log In\" />\r\n                                <p>or {' '}\r\n                                <Link to=\"/\">Create a new account</Link></p>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"img-side\">\r\n                            <img src={require(\"../../img/doctor8.svg\")} alt=\"\" className=\"register-user\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>  \r\n            {topbar.hide()}  \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLoginDoctor.propTypes ={\r\n    login: PropTypes.func.isRequired,\r\n    isDoctorAuthenticated: PropTypes.bool\r\n};\r\nconst mapStateToProps = state => ({\r\n    isDoctorAuthenticated: state.authDoctor.isDoctorAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(LoginDoctor);\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/authDoctor\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport topbar from \"topbar\";\r\nimport DarkTopLoaderBar from \"../../topbar/topbar\";\r\nimport { Store } from 'react-notifications-component';\r\n// import 'animate.css/animate.min.css'  \r\n\r\nconst DoctorRegister = ({ setAlert, register, isDoctorAuthenticated }) => {\r\n\r\n  DarkTopLoaderBar();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n     \r\n      Store.addNotification({\r\n        title: \"Password Error\",\r\n       message: \"Password Not Match With Confirm Password\",\r\n       type: \"danger\",\r\n       insert: \"top\",\r\n       container: \"bottom-center\",\r\n       animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n       animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n       dismiss: {\r\n         duration: 2000,\r\n         onScreen: true\r\n       }\r\n     });\r\n    } else {\r\n      register({ name, email, password });\r\n     \r\n    }\r\n  };\r\n  if (isDoctorAuthenticated) {\r\n\r\n\r\n    Store.addNotification({\r\n               \r\n      message: \"Login Sucessful\",\r\n      type: \"success\",\r\n      insert: \"top\",\r\n      container: \"bottom-center\",\r\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n      dismiss: {\r\n        duration: 2000,\r\n        onScreen: true\r\n      }\r\n    });\r\n\r\n\r\n   \r\n\r\n\r\n    return  <Redirect to=\"/dashboard\" />;\r\n    \r\n\r\n      \r\n \r\n    \r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {topbar.show()}\r\n      \r\n\r\n      <section id=\"common\">\r\n        <div className=\"container\">\r\n          <div className=\"common-form\">\r\n            <div className=\"form-side\">\r\n              <div className=\"heading-common\">\r\n                <h1>\r\n                  <strong>Doctor</strong>\r\n                  <i className=\"fas fa-user-md\"></i>\r\n                </h1>\r\n              </div>\r\n              <form onSubmit={(e) => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label\" for=\"exampleInputEmail1\">\r\n                    Email address\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter your email address.\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    This site uses{\" \"}\r\n                    <a\r\n                      href=\"https://en.gravatar.com/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      Gravatar{\" \"}\r\n                    </a>{\" \"}\r\n                    so if you want a profile image, use a Gravatar email\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label\" for=\"exampleInputEmail1\">\r\n                    Full Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter your full name.\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label\" for=\"exampleInputPassword1\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter password.\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"label\" for=\"exampleInputPassword1\">\r\n                    Confirm Password\r\n                  </label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter your password again.\"\r\n                    name=\"password2\"\r\n                    value={password2}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info\" value=\"Sign Up\" />\r\n              </form>\r\n            </div>\r\n            <div className=\"img-side\">\r\n              <img\r\n                className=\"register-user\"\r\n                src={require(\"../../img/newDoctor1.svg\")}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {topbar.hide()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDoctorRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isDoctorAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isDoctorAuthenticated: state.authDoctor.isDoctorAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(DoctorRegister);\r\n","import React, { useState, Fragment } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {setAlert} from '../../actions/alert';\r\nimport { register} from '../../actions/authUser';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\nimport { Store } from 'react-notifications-component';\r\n\r\n\r\nconst UserRegister = ({ setAlert, register, isUserAuthenticated }) => {\r\n    DarkTopLoaderBar();\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const {name, email, password, password2} = formData;\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if(password !== password2) {\r\n          \r\n                Store.addNotification({\r\n                     title: \"Password Error\",\r\n                    message: \"Password Not Match With Confirm Password\",\r\n                    type: \"danger\",\r\n                    insert: \"top\",\r\n                    container: \"bottom-center\",\r\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    dismiss: {\r\n                      duration: 2000,\r\n                      onScreen: true\r\n                    }\r\n                  });\r\n        } else {\r\n            register({ name, email, password });\r\n        }\r\n    }\r\n    if(isUserAuthenticated) {\r\n        \r\n        Store.addNotification({\r\n               \r\n            message: \"Login Sucessful\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"bottom-center\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n              duration: 2000,\r\n              onScreen: true\r\n            }\r\n          });\r\n        return <Redirect to='/appointment' />\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"common\">\r\n                <div className=\"container\">\r\n                    <div className=\"common-form\">\r\n                        <div className=\"form-side\">\r\n                            <div className=\"heading-common\">\r\n                            <h1><strong style={{color: \"#6C63FF\"}}>User </strong>\r\n                                <i className=\"fas fa-users\" style={{color: \"#6C63FF\"}}></i>\r\n                            </h1>\r\n                            </div>\r\n                            <form onSubmit={e => onSubmit(e)}>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputEmail1\">Email address</label>\r\n                                <input \r\n                                    type=\"email\"\r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your email address.\" \r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">This site uses <a href=\"https://en.gravatar.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gravatar </a> so if you want a profile image, use a Gravatar email</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputEmail1\">Full Name</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your full name.\" \r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputPassword1\">Password</label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter password.\" \r\n                                    name=\"password\"\r\n                                    value={password} \r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <label className=\"label\" for=\"exampleInputPassword1\">Confirm Password</label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Enter your password again.\" \r\n                                    name=\"password2\"\r\n                                    value={password2} \r\n                                    onChange={e => onChange(e)}\r\n                                />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Sign Up\" />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"img-side\">\r\n                            <img className=\"register-user\" src={require(\"../../img/undraw_forms_78yw.svg\")} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nUserRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isUserAuthenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps =state => ({\r\n    isUserAuthenticated: state.authUser.isUserAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAlert, register})(UserRegister);\r\n","import React, { Fragment } from 'react';\r\nimport preloder from \"../../img/preloader.gif\"\r\nexport default () => (\r\n  <Fragment>\r\n   <img src = {preloder} />  </Fragment>\r\n);","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILE_BY_ID,\r\n    GET_PROFILES,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    ADD_REVIEW,\r\n    ADD_REVIEW_ERROR,\r\n    REMOVE_REVIEW,\r\n    DELETE_ACCOUNT\r\n} from './types';\r\n\r\n// Get current doctors profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        \r\n    }\r\n};\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Get profiles by doctor id\r\nexport const getProfileById = doctorId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/doctor/${doctorId}`);        \r\n        dispatch({\r\n            type: GET_PROFILE_BY_ID,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Create / Update a profile\r\nexport const createProfile = (formData, history, edit=false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('api/profile', formData, config);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// ADD Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Experience added\", 'success'));\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// ADD Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Education added\", 'success'));\r\n     \r\n        \r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = exp_id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/profile/experience/${exp_id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Experience Removed\", 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// Delete education\r\nexport const deleteEducation = edu_id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/profile/education/${edu_id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Education Removed\", 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Add review\r\nexport const addReview = (doctorId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/profile/doctor/:${doctorId}`, formData, config);\r\n        dispatch({\r\n            type: ADD_REVIEW,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Review Added', 'success'))\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: ADD_REVIEW_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Review\r\nexport const deleteReview = (doctorId, reviewId) => async dispatch => {\r\n    try {\r\n         await axios.delete(`/api/profile/doctor/${doctorId}/${reviewId}`);\r\n        \r\n        dispatch({\r\n            type: REMOVE_REVIEW,\r\n            payload: reviewId\r\n        });\r\n\r\n        dispatch(setAlert('Comment removed', 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: ADD_REVIEW_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure? this can not be undone!')) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n    \r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            });\r\n            dispatch({\r\n                type: DELETE_ACCOUNT\r\n            });\r\n    \r\n            dispatch(setAlert(\"Your Account has been Removed\", 'success'));\r\n        } catch (err) {\r\n            dispatch ({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp.id}>\r\n      <td>{exp.medical}</td>\r\n      <td>{exp.position}</td>\r\n      <td>\r\n        <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \"Now\"\r\n        ) : (\r\n          <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n          X\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <div className=\"common-details\">\r\n        <h2 class=\"credentials\">\r\n          <strong>Experience Credentials</strong>\r\n        </h2>\r\n        <br />\r\n        <div className=\"common-table\">\r\n          <table className=\"table doc-table\">\r\n            <tr>\r\n              <th>Hospital</th>\r\n              <th>Postion</th>\r\n              <th>Years</th>\r\n              <th></th>\r\n            </tr>\r\n            {experiences}\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu.id}>\r\n      <td>{edu.school}</td>\r\n      <td>{edu.degree}</td>\r\n      <td>\r\n        <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \"Now\"\r\n        ) : (\r\n          <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n          X\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      <div className=\"common-details\">\r\n        <h2 class=\"credentials\">\r\n          <strong>Education Credentials</strong>\r\n        </h2>\r\n        <br />\r\n        <div class=\"common-table\">\r\n          <table class=\"table doc-table\">\r\n            <tr>\r\n              <th>School</th>\r\n              <th>Degree</th>\r\n              <th>Years</th>\r\n              <th></th>\r\n            </tr>\r\n            {educations}\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Patient = ({patient}) => {\r\n\r\n    const [value,setValue] = useState([]);\r\n\r\n    const modalBody = patient.map(pat => (\r\n        <Fragment key={pat._id}>\r\n            <h2 className=\"style-heading\"><strong>{pat.patientname}</strong></h2>\r\n            <p className=\"profile-p\"><strong>Father's name: {pat.fathername}</strong></p>\r\n            <p className=\"profile-p2\"><strong>Age: </strong>{pat.age}</p>\r\n            <p className=\"profile-p2\"><strong>Status: </strong>{pat.status}</p>\r\n            <p className=\"profile-p2\"><strong>Date: </strong><Moment format='DD/MM/YYYY'>{pat.date}</Moment></p>\r\n            <p className=\"profile-p2\"><strong>Booking ID: </strong>{pat.bookingId}</p>\r\n        </Fragment>\r\n    ));\r\n    const patients = patient.map(ptn => (\r\n        <tr key={ptn._id}>\r\n            <td>{ptn.bookingId}</td>\r\n            <td>{ptn.patientname}</td>\r\n            <td>\r\n                <Moment format='DD/MM/YYYY'>{ptn.date}</Moment>\r\n            </td>\r\n            <td>\r\n            <button \r\n                onClick={() => setValue(ptn._id)}\r\n                type=\"button\" \r\n                className=\"btn btn-info\"\r\n                data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                View\r\n            </button>\r\n                <div className=\"modal fade \" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Patient Details</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"profiles\">\r\n                                    <div >\r\n                                        <div className=\"profile-details\">\r\n                                            <div className=\"appointment-p prfile-desc\">\r\n                                                {\r\n                                                    modalBody.map(modal => value === modal.key ? \r\n                                                        modal.props.children : \"\")\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"desc-p profile-buttons\">\r\n                                            <p className=\"profile-p2\"><strong>Description: </strong>{ptn.description}</p>                                        \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"common-details\">\r\n                <h2 className=\"credentials\"><strong>Patient Credentials</strong></h2>\r\n                    <br />\r\n                    <div className=\"common-table\">\r\n                        <div className=\"scroll-table\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Booking ID</th>\r\n                                        <th>Patient's Name</th>\r\n                                        <th>Date</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                            <tbody>\r\n                                {patients}\r\n                            </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            <br />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nPatient.propTypes = {\r\n    patient: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default connect(null)(Patient);\r\n","import React, {Fragment, useState, useEffect} from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Graph = ({patient}) => {\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    const chart = () => {\r\n        const patientData = [];\r\n        const jan = [0];\r\n        const feb = [0];\r\n        const mar = [0];\r\n        const apr = [0];\r\n        const may = [0];\r\n        const jun = [0];\r\n        const jul = [0];\r\n        const aug = [0];\r\n        const sep = [0];\r\n        const oct = [0];\r\n        const nov = [0];\r\n        const dec = [0];\r\n    \r\n        patient.forEach(pat => {\r\n            if(new Date(pat.date).getMonth() === 0) {\r\n                return jan.push(jan[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 1) {\r\n                return feb.push(feb[0]+1); \r\n            } else if(new Date(pat.date).getMonth() === 2) {\r\n                return mar.push(mar[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 3) {\r\n                return apr.push(apr[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 4) {\r\n                return may.push(may[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 5) {\r\n                return jun.push(jun[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 6) {\r\n                return jul.push(jul[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 7) {\r\n                return aug.push(aug[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 8) {\r\n                return sep.push(sep[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 9) {\r\n                return oct.push(oct[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 10) {\r\n                return nov.push(nov[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 11) {\r\n                return dec.push(dec[0]+1);\r\n            } else {\r\n            }\r\n        });\r\n    \r\n        var janData = jan.reduce( (a, b) => a+b, jan[0]);\r\n        var febData = feb.reduce( (a, b) => a+b, feb[0]);\r\n        var marData = mar.reduce( (a, b) => a+b, mar[0]);\r\n        var aprData = apr.reduce( (a, b) => a+b, apr[0]);\r\n        var mayData = may.reduce( (a, b) => a+b, may[0]);\r\n        var junData = jun.reduce( (a, b) => a+b, jun[0]);\r\n        var julData = jul.reduce( (a, b) => a+b, jul[0]);\r\n        var augData = aug.reduce( (a, b) => a+b, aug[0]);\r\n        var sepData = sep.reduce( (a, b) => a+b, sep[0]);\r\n        var octData = oct.reduce( (a, b) => a+b, oct[0]);\r\n        var novData = nov.reduce( (a, b) => a+b, nov[0]);\r\n        var decData = dec.reduce( (a, b) => a+b, dec[0]);\r\n    \r\n        patientData.push(janData);\r\n        patientData.push(febData);\r\n        patientData.push(marData);\r\n        patientData.push(aprData);\r\n        patientData.push(mayData);\r\n        patientData.push(junData);\r\n        patientData.push(julData);\r\n        patientData.push(augData);\r\n        patientData.push(sepData);\r\n        patientData.push(octData);\r\n        patientData.push(novData);\r\n        patientData.push(decData);\r\n    \r\n\r\n    \r\n        setChartData({\r\n            labels: [\r\n                    \"January\", \r\n                    \"February\", \r\n                    \"March\", \r\n                    \"April\", \r\n                    \"May\", \r\n                    \"June\", \r\n                    \"July\", \r\n                    \"August\", \r\n                    \"September\", \r\n                    \"October\", \r\n                    \"November\", \r\n                    \"December\"\r\n                ],\r\n            datasets: [\r\n                {\r\n                    label: \"level of patients\",\r\n                    data: patientData,\r\n                    borderColor: [\r\n                        \"#17a2b8\"\r\n                    ],\r\n                    pointBorderColor: [\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                    ],\r\n                    borderWidth: 3\r\n                }\r\n            ]\r\n        }); \r\n    };\r\n    useEffect(() => {\r\n        chart();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"user-graph\">\r\n                            <Line\r\n                                data={chartData}\r\n                                options={{\r\n                                    title: { text: \"APPOINTMENTS PER MONTHS\", display: true },\r\n                                    labels: {\r\n                                        \"fontColor\": \"#f4f4f4\",\r\n                                        \"fontWeight\": \"bold\",\r\n                                    },\r\n                                    scales: {\r\n                                    yAxes: [\r\n                                        {\r\n                                        ticks: {\r\n                                            autoSkip: true,\r\n                                            maxTicksLimit: 10,\r\n                                            beginAtZero: true\r\n                                        },\r\n                                        gridLines: {\r\n                                            display: false\r\n                                        }\r\n                                        }\r\n                                    ],\r\n                                    xAxes: [\r\n                                        {\r\n                                        gridLines: {\r\n                                            display: false\r\n                                        }\r\n                                        }\r\n                                    ]\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nGraph.propTypes = {\r\n    patient: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Graph;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport {connect} from 'react-redux';\r\nimport Graph from './Graph';\r\n\r\nconst Review = ({review, patient}) => {\r\n    const reviews = review.map(rev => (\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src={rev.avatar} alt=\"Card image cap\" />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{rev.text}</p>\r\n                    <p class=\"post-date\">posted on \r\n                     {' '}<Moment format='DD/MM/YYYY'>{rev.date}</Moment>\r\n                    </p>\r\n                    <em>{rev.name}</em>\r\n                </div>\r\n        </div>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            <div className=\"review-graph\">\r\n                <div className=\"common-details\">\r\n                <h2 class=\"credentials\"><strong>Users Reviews</strong></h2>\r\n                    <br />\r\n                    <div id=\"testimonials\">\r\n                        <div class=\"scroll\">\r\n                            { review.length === 0 ? \"No Reviews Yet\" : reviews }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"common-details\">\r\n                    <h2 className=\"credentials\"><strong>Total Appointments</strong></h2>\r\n                    <br />\r\n                    <div id=\"graph\">\r\n                        <Graph patient={patient} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nReview.propTypes = {\r\n    patient: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default connect(null)(Review);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport Patient from './Patient';\r\nimport Review from './Review';\r\nimport {getCurrentProfile, deleteAccount} from '../../actions/profile';\r\nimport {Link} from 'react-router-dom';\r\nimport noprofile from \"../../img/Noprofile.gif\"\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\n\r\n\r\nconst Dashboard = ({\r\n        getCurrentProfile, \r\n        deleteAccount, \r\n        authDoctor: {doctor}, \r\n        profile: {profile, loading}\r\n    }) => {\r\n        DarkTopLoaderBar();\r\n        \r\n        useEffect(() => {\r\n            getCurrentProfile();\r\n        }, [getCurrentProfile]);    \r\n        \r\n    return loading && profile == null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            {topbar.show()}\r\n                <section id=\"dashboard\">\r\n                    <div className=\"container\">\r\n                        <div className=\"heading-common\">\r\n                            <h1><strong>Dashboard</strong></h1>\r\n                            <h2 className=\"welcome-heading\"><i className=\"fas fa-user-md\"></i> Welcome {doctor && doctor.name}</h2>\r\n                        </div>\r\n                        <br />\r\n                        {profile !== null ? (\r\n                            <Fragment>\r\n                                {profile.patients !== null && profile.patients.length > 0 ? \r\n                                    (\r\n                                        <Patient patient={profile.patients} />\r\n                                    ) : (\r\n                                        <h5 style={{color: \"#738f93\"}}>No Appointments yet..</h5>\r\n                                    )\r\n                                }\r\n                                <Review patient={profile.patients} review={profile.review} />\r\n                                <Experience experience={profile.experience} />\r\n                                <Education education={profile.education} />\r\n                                <button \r\n                                    onClick={() => deleteAccount()}\r\n                                    type=\"button\" \r\n                                    className=\"btn btn-danger\"><i className=\"fas fa-user-minus\"></i> Delete My Account\r\n                                </button>\r\n                            </Fragment>\r\n                        ) : (\r\n                            <Fragment>\r\n                                <p>You have not any Profile add your Profile..</p>\r\n                               \r\n                                <Link to='/create-profile' className=\"btn btn-info\">\r\n                                    Create Profile\r\n                                </Link>\r\n                            </Fragment>  \r\n                    )}\r\n                    </div>\r\n                </section>\r\n                <br />\r\n                {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    authDoctor: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    authDoctor: state.authDoctor,\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard);\r\n","import React, {Fragment, useState} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addEducation} from '../../actions/profile';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\n\r\n\r\nconst AddEducation = ({addEducation, history}) => {\r\n    DarkTopLoaderBar();\r\n    \r\n    const [formData, setFormdata] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from:'',\r\n        to:'',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {school, degree, fieldofstudy, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormdata({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                        <div style={{height: \"auto\"}} class=\"common-form\">\r\n                            <div className=\"form-side\">\r\n                                <div className=\"heading-common\">\r\n                                    <h1><strong>Add Education</strong>\r\n                                        <i className=\"fas fa-university\"></i>\r\n                                    </h1>  \r\n                                    <p className=\"lead\">\r\n                                        <i className=\"fas fa-user\"></i> Add any school, Medicalcamp, etc that you have attended\r\n                                    </p>\r\n                                </div>\r\n                                <form onSubmit={e => {\r\n                                    e.preventDefault();\r\n                                    addEducation(formData, history);\r\n                                }}>\r\n                                    <small>* = required field</small>\r\n                                    <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* School\"\r\n                                        name=\"school\"\r\n                                        value={school}\r\n                                        onChange={e => onChange(e)}\r\n                                        required\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* Degree or Certification\"\r\n                                        name=\"degree\" \r\n                                        value={degree} \r\n                                        onChange={e => onChange(e)} \r\n                                        required\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* Field of study\" \r\n                                        name=\"fieldofstudy\" \r\n                                        value={fieldofstudy} \r\n                                        onChange={e => onChange(e)} \r\n                                        required \r\n                                    />\r\n                                    </div>\r\n                                    \r\n                                    <h6>From Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                                            setFormdata({ ...formData, current: !current });\r\n                                            toggleDisabled(!toDateDisabled);\r\n                                        }} /> {' '} Current School</p>\r\n                                    </div>\r\n                                    <h6>To Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input \r\n                                            type=\"date\" \r\n                                            className=\"form-control\" \r\n                                            name=\"to\" \r\n                                            value={to} \r\n                                            onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                            name=\"description\"\r\n                                            className=\"form-control\" \r\n                                            placeholder=\"* Program Description\" \r\n                                            value={description} onChange={e => onChange(e)}></textarea>\r\n                                        <small className=\"form-text\">Tell us a little about the program.</small>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-info\" />{' '}\r\n                                    <Link to=\"/dashboard\" type=\"submit\" className=\"btn btn-outline-secondary\">Go Back</Link>\r\n                                </form>\r\n                                <br />\r\n                            </div>\r\n                            <div className=\"img-side\">\r\n                                <img src={require(\"../../img/graduation.svg\")} alt=\"\" className=\"register-user\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n            {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addEducation})(withRouter(AddEducation));\r\n","import React, {Fragment, useState} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addExperience} from '../../actions/profile';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n    DarkTopLoaderBar();\r\n    \r\n    const [formData, setFormData] = useState({\r\n        medical: '',\r\n        position: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: '' \r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const {medical, position, location, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    return (\r\n        <div>\r\n            {topbar.show()}\r\n            <Fragment>\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                    <div style={{height: \"auto\"}} class=\"common-form\">\r\n                            <div className=\"form-side\">\r\n                                <div className=\"heading-common\">\r\n                                    <h1><strong>Add Experience </strong>\r\n                                        <i className=\"fab fa-black-tie\"></i>\r\n                                    </h1>  \r\n                                    <p className=\"lead\">\r\n                                        <i className=\"fas fa-user\"></i> Add any job or position that you have had in the past or current\r\n                                    </p>\r\n                                </div>\r\n                                <form onSubmit={e => {\r\n                                    e.preventDefault();\r\n                                    addExperience(formData, history);\r\n                                }}>\r\n                                    <small>* = required field</small>\r\n                                    <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* Hospital\"\r\n                                        name=\"medical\"\r\n                                        value={medical}\r\n                                        onChange={e => onChange(e)}\r\n                                        required\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* Position\"\r\n                                        name=\"position\" \r\n                                        value={position} \r\n                                        onChange={e => onChange(e)} \r\n                                        required\r\n                                    />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* Location\" \r\n                                        name=\"location\" \r\n                                        value={location} \r\n                                        onChange={e => onChange(e)} \r\n                                        required \r\n                                    />\r\n                                    </div>\r\n                                    \r\n                                    <h6>From Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n                                            setFormData({ ...formData, current: !current });\r\n                                            toggleDisabled(!toDateDisabled);\r\n                                        }} /> {' '} Current Job</p>\r\n                                    </div>\r\n                                    <h6>To Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input \r\n                                            type=\"date\" \r\n                                            className=\"form-control\" \r\n                                            name=\"to\" \r\n                                            value={to} \r\n                                            onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                            name=\"description\"\r\n                                            className=\"form-control\" \r\n                                            placeholder=\"* Program Description\" \r\n                                            value={description} onChange={e => onChange(e)}></textarea>\r\n                                        <small className=\"form-text\">Tell us a little about the job.</small>\r\n                                    </div>\r\n                                    <input type=\"submit\" className=\"btn btn-info\" />{' '}\r\n                                    <Link to=\"/dashboard\" type=\"submit\" className=\"btn btn-outline-secondary\">Go Back</Link>\r\n                                </form>\r\n                                <br />\r\n                            </div>\r\n                            <div className=\"img-side\">\r\n                                <img className=\"register-user\" src={require(\"../../img/undraw_medical_research_qg4d.svg\")} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </section>\r\n        </Fragment>\r\n        {topbar.hide()}\r\n        </div>\r\n    )\r\n};\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addExperience})(withRouter(AddExperience));\r\n","import React, {useState, Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {createProfile} from '../../actions/profile';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\n\r\nconst CreateProfile = ({ createProfile, history}) => {\r\n    DarkTopLoaderBar();\r\n    \r\n    const [formData, setFormData] = useState({\r\n        clinic: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        specialists: '',\r\n        ruppess: '',\r\n        timing: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        youtube: '',\r\n        instagram: '' \r\n    });\r\n\r\n    const [displySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        clinic,\r\n        website,\r\n        location,\r\n        status,\r\n        specialists,\r\n        ruppess,\r\n        timing,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                    <div style={{height: \"auto\"}} class=\"common-form\">\r\n                        <div className=\"form-side\">\r\n                            <div className=\"heading-common\">\r\n                                <h1><strong>Add Profile</strong>\r\n                                    <i className=\"far fa-id-card\"></i>\r\n                                </h1>  \r\n                                <p className=\"lead\">\r\n                                    <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                                    profile stand out\r\n                                </p>\r\n                            </div>\r\n                            <form onSubmit={e => onSubmit(e)}>\r\n                                <small>* = required field</small>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Enter your status. eg. Professor, Senior Specalist etc.\"\r\n                                    name=\"status\"\r\n                                    value={status}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Give us an idea of where you are at in your career</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Clinic\" \r\n                                    name=\"clinic\" \r\n                                    value={clinic}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Could be your own clinic or one you work </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Specalist\"\r\n                                    name=\"specialists\" \r\n                                    value={specialists}\r\n                                    onChange={e => onChange(e)} required \r\n                                />\r\n                                <small className=\"form-text text-muted\">Give us an idea of your specalist. </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Timing\"\r\n                                    name=\"timing\"\r\n                                    value={timing}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Ruppess\"\r\n                                    name=\"ruppess\"\r\n                                    value={ruppess}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Website.\"\r\n                                    name=\"website\"\r\n                                    value={website}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Could be your own or a clinic website </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Location.\"\r\n                                    name=\"location\"\r\n                                    value={location}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Could be your own clinic address or one you work </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* A short bio of yourself\" \r\n                                        name=\"bio\"\r\n                                        value={bio}\r\n                                        onChange={e => onChange(e)} required\r\n                                    />\r\n                                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3\">\r\n                                    <button onClick={() => toggleSocialInputs(!displySocialInputs)}\r\n                                        type=\"button\" className=\"btn btn-outline-secondary\">\r\n                                        Add Social Network Links\r\n                                    </button>\r\n                                    <span className=\"text-muted\"> {' '}\r\n                                        Optional\r\n                                    </span>\r\n                                </div>\r\n                                {displySocialInputs && (\r\n                                    <Fragment>\r\n                                        <div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-twitter\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Twitter Profile URL\" \r\n                                                    name=\"twitter\" \r\n                                                    value={twitter} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-facebook\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Facebook Profile URL\" \r\n                                                    name=\"facebook\" \r\n                                                    value={facebook} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-youtube\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Youtube Profile URL\" \r\n                                                    name=\"youtube\" \r\n                                                    value={youtube} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-instagram\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Instagram Profile URL\" \r\n                                                    name=\"instagram\" \r\n                                                    value={instagram} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Fragment>\r\n                                )}\r\n                                <input type=\"submit\" className=\"btn btn-info\" /> {' '}\r\n                                <Link to=\"/dashboard\" className=\"btn btn-outline-secondary\">Go Back</Link>\r\n                            </form>\r\n                            <br />\r\n                        </div>\r\n                        <div className=\"img-side\">\r\n                            <img src={require(\"../../img/mention.svg\")} alt=\"\" className=\"register-user\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {createProfile})(withRouter(CreateProfile));\r\n","import React, {useState, Fragment, useEffect} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport {createProfile, getCurrentProfile} from '../../actions/profile';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\nconst Edit = ({ profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\r\n    DarkTopLoaderBar(0);\r\n\r\n    const [formData, setFormData] = useState({\r\n        clinic: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        specialists: '',\r\n        ruppess: '',\r\n        timing: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        youtube: '',\r\n        instagram: '' \r\n    });\r\n\r\n    const [displySocialInputs, toggleSocialInputs] = useState(false);\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        setFormData({\r\n            clinic: loading || !profile.clinic ? '': profile.clinic,\r\n            website: loading || !profile.website ? '': profile.website,\r\n            location: loading || !profile.location ? '': profile.location,\r\n            status: loading || !profile.status ? '': profile.status,\r\n            specialists: loading || !profile.specialists ? '': profile.specialists,\r\n            ruppess: loading || !profile.ruppess ? '': profile.ruppess,\r\n            timing: loading || !profile.timing ? '': profile.timing,\r\n            bio: loading || !profile.bio ? '': profile.bio,\r\n            twitter: loading || !profile.social ? '': profile.social.twitter,\r\n            facebook: loading || !profile.social ? '': profile.social.facebook,\r\n            youtube: loading || !profile.social ? '': profile.social.youtube,\r\n            instagram: loading || !profile.social ? '': profile.social.instagram\r\n        });\r\n    },[loading, getCurrentProfile]);\r\n\r\n    const {\r\n        clinic,\r\n        website,\r\n        location,\r\n        status,\r\n        specialists,\r\n        ruppess,\r\n        timing,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                    <div style={{height: \"auto\"}} class=\"common-form\">\r\n                        <div className=\"form-side\">\r\n                            <div className=\"heading-common\">\r\n                                <h1><strong>Edit Profile</strong>{' '}\r\n                                    <i className=\"far fa-id-card\"></i>\r\n                                </h1>  \r\n                                <p className=\"lead\">\r\n                                    <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                                    profile stand out\r\n                                </p>\r\n                            </div>\r\n                            <form onSubmit={e => onSubmit(e)}>\r\n                                <small>* = required field</small>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Enter your status. eg. Professor, Senior Specalist etc.\"\r\n                                    name=\"status\"\r\n                                    value={status}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Give us an idea of where you are at in your career</small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Clinic\" \r\n                                    name=\"clinic\" \r\n                                    value={clinic}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Could be your own clinic or one you work </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Specalist\"\r\n                                    name=\"specialists\" \r\n                                    value={specialists}\r\n                                    onChange={e => onChange(e)} required \r\n                                />\r\n                                <small className=\"form-text text-muted\">Give us an idea of your specalist. </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Timing\"\r\n                                    name=\"timing\"\r\n                                    value={timing}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Ruppess\"\r\n                                    name=\"ruppess\"\r\n                                    value={ruppess}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Website.\"\r\n                                    name=\"website\"\r\n                                    value={website}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Could be your own or a clinic website </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"* Location.\"\r\n                                    name=\"location\"\r\n                                    value={location}\r\n                                    onChange={e => onChange(e)} required\r\n                                />\r\n                                <small className=\"form-text text-muted\">Could be your own clinic address or one you work </small>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"* A short bio of yourself\" \r\n                                        name=\"bio\"\r\n                                        value={bio}\r\n                                        onChange={e => onChange(e)} required\r\n                                    />\r\n                                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                                </div>\r\n\r\n                                <div className=\"mb-3\">\r\n                                    <button onClick={() => toggleSocialInputs(!displySocialInputs)}\r\n                                        type=\"button\" className=\"btn btn-outline-secondary\">\r\n                                        Add Social Network Links\r\n                                    </button>\r\n                                    <span className=\"text-muted\"> {' '}\r\n                                        Optional\r\n                                    </span>\r\n                                </div>\r\n                                {displySocialInputs && (\r\n                                    <Fragment>\r\n                                        <div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-twitter\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Twitter Profile URL\" \r\n                                                    name=\"twitter\" \r\n                                                    value={twitter} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-facebook\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control form-control-lg\" \r\n                                                    placeholder=\"Facebook Profile URL\" \r\n                                                    name=\"facebook\" \r\n                                                    value={facebook} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-youtube\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control form-control-lg\" \r\n                                                    placeholder=\"Youtube Profile URL\" \r\n                                                    name=\"youtube\" \r\n                                                    value={youtube} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <span className=\"input-group-text\">\r\n                                                        <i className=\"fab fa-instagram\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Instagram Profile URL\" \r\n                                                    name=\"instagram\" \r\n                                                    value={instagram} onChange={e => onChange(e)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Fragment>\r\n                                )}\r\n                                <input type=\"submit\" className=\"btn btn-info\" /> {' '}\r\n                                <Link to=\"/dashboard\" className=\"btn btn-outline-secondary\">Go Back</Link>\r\n                            </form>\r\n                            <br />\r\n                        </div>\r\n                        <div className=\"img-side\">\r\n                            <img src={require(\"../../img/mention.svg\")} alt=\"\" className=\"register-user\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEdit.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(Edit));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    doctor: { _id, name, avatar },\r\n    clinic,\r\n    location,\r\n    specialists,\r\n    ruppess,\r\n  },\r\n  authUser,\r\n}) => {\r\n  return (\r\n    <div classNameName=\"profiles\">\r\n      <div className=\"profile-1\">\r\n        <div className=\"profile-img\">\r\n          <img src={avatar} alt=\"\" />\r\n        </div>\r\n        <div className=\"profile-details\">\r\n          <div className=\"profile-desc\">\r\n            <h2 className=\"profile-heading\">\r\n              <strong>{name}</strong>\r\n            </h2>\r\n            <p className=\"profile-p\">\r\n              <strong>{specialists}</strong>{\" \"}\r\n            </p>\r\n            <p className=\"profile-p2\">\r\n              <strong>{clinic}</strong> {location}\r\n            </p>\r\n            <p className=\"profile-p2\">\r\n              <strong>{ruppess}</strong> Consultation fee at clinic\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"mx-auto profile-buttons\">\r\n          {authUser.isUserAuthenticated ? (\r\n            <Fragment>\r\n              <Link\r\n                to={`/appointment/${_id}`}\r\n                type=\"button\"\r\n                className=\"rounded-pill  btn btn-info\"\r\n              >\r\n                <i className=\"fas fa-calendar-check\"></i> Book Appointment\r\n              </Link>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <button\r\n                type=\"button\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"right\"\r\n                title=\"Please Login as a User\"\r\n                className=\"rounded-pill profile-btn btn btn-info \"\r\n              >\r\n                <i className=\"fas fa-calendar-check\"></i> Book Appointment\r\n              </button>\r\n            </Fragment>\r\n          )}\r\n          <Link\r\n            to={`/doctor/${_id}`}\r\n            type=\"button\"\r\n            className=\"rounded-pill profile-btn btn view-profile-btn\"\r\n          >\r\n            View Profile\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  authUser: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  authUser: state.authUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProfileItem);\r\n","import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Dots} from 'react-preloaders';\r\nimport ProfileItem from './ProfileItem';\r\nimport {getProfiles} from '../../actions/profile';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\n\r\nconst Profiles = ({getProfiles, profile: { profiles,loading }}) => {\r\n    DarkTopLoaderBar();\r\n    useEffect(() => {\r\n        getProfiles();\r\n    },[getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            { loading ? \r\n            <>\r\n            \r\n            \r\n            <Spinner /> \r\n            </>\r\n             : \r\n             <Fragment>\r\n                    {topbar.show()}\r\n                <section id=\"profiles-page\">\r\n                    <div className=\"container\">\r\n                        <div className=\"heading-common\">\r\n                            <h1><strong style={{color : \"#6C63FF\"} }>Doctor Profiles</strong></h1>  \r\n                        </div>\r\n                        <h2 className=\"welcome-heading\"><i className=\"fas fa-user-md\"></i> Book your Appointments</h2>\r\n                        <br />\r\n                        {\r\n                            profiles != null ? (\r\n                                profiles.map(profile => (\r\n                                    <ProfileItem key={profile._id} profile={profile} />\r\n                                ))\r\n                            ) : <h4>No Profiles found..</h4>\r\n                        }\r\n                    </div>\r\n                </section>\r\n                {topbar.hide()}\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({profile: {\r\n    doctor: { name, avatar },\r\n        clinic,\r\n        location,\r\n        specialists,\r\n        ruppess,\r\n        website,\r\n        social\r\n    }\r\n}) => {\r\n    return (\r\n        <div className=\"top-profile\">\r\n            <div className=\"top-details\">\r\n                <div className=\"top-img\">\r\n                    <img className=\"round-img\" src={avatar} alt=\"\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                    <h2 className=\"profile-top-heading\"><strong>{name}</strong></h2>\r\n                    <br />\r\n                    <h3 className=\"profile-top-desc\">{specialists}</h3>\r\n                    <br />\r\n                    <p className=\"profile-top-p\">{clinic}, {location}</p>\r\n                    <p className=\"fee\"><strong>{ruppess} </strong>Consultation Fee</p>\r\n                    <div className=\"logos\">\r\n                        {website && (\r\n                            <a className=\"logo\" href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fas fa-globe fa-2x\"></i>\r\n                            </a>\r\n                        )}\r\n                        { social && social.twitter && (\r\n                            <a className=\"logo\" href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            </a>\r\n                        )}\r\n                        { social && social.facebook && (\r\n                            <a className=\"logo\" href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fab fa-facebook-square fa-2x\"></i>\r\n                            </a>\r\n                        )}\r\n                        { social && social.instagram && (\r\n                            <a className=\"logo\" href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            </a>\r\n                        )}\r\n                        { social && social.youtube && (\r\n                            <a className=\"logo\" href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            </a>\r\n                        )}\r\n                    </div>\r\n                </div>    \r\n            </div>   \r\n            <div className=\"top-profile-img\">\r\n                <img src={require(\"../../img/doctor4.svg\")} />\r\n            </div>   \r\n        </div>\r\n    )\r\n};\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({ \r\n    profile: {\r\n        bio,\r\n        timing,\r\n        doctor: {name}\r\n    }\r\n}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"top-bio\">\r\n                <div className=\"bio\">\r\n                    <h2 className=\"heading-bio\">Dr. {(name.split(' ')[1])}'s Bio</h2>\r\n                    <p className=\"bio-p\">{bio}</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"time\">\r\n                    <h2 className=\"heading-bio\">Timing</h2>\r\n                    <p className=\"bio-p\">{timing}</p>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n    experience: {\r\n        medical, position, location ,from, to, description\r\n    }\r\n}) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"exp-common-details\">\r\n                <h5 className=\"profile-p\"><strong>{medical}</strong></h5>\r\n                <p className=\"mar-1\">\r\n                    <Moment format='DD/MM/YYYY'>{from}</Moment> - {\r\n                        !to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>\r\n                    }\r\n                </p>\r\n                <p><strong>Position: </strong> {position}</p>\r\n                <p><strong>Location: </strong> {location}</p>\r\n                <p><strong>Description: </strong>{description}</p>\r\n            </div>\r\n            <hr />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({ \r\n    education : {\r\n        school, degree, fieldofstudy,from, to, description\r\n    }\r\n}) => {\r\n    return (\r\n        <Fragment>\r\n            <div class=\"exp-common-details\">\r\n                <h5 className=\"profile-p\"><strong>{school}</strong></h5>\r\n                <p class=\"mar-1\"><Moment format='DD/MM/YYYY'>{from}</Moment> - \r\n                    {\r\n                        !to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>\r\n                    }\r\n                </p>\r\n                <p><strong>Degree: </strong> {degree}</p>\r\n                <p><strong>Field of Study: </strong>{fieldofstudy}</p>\r\n                <p><strong>Description: </strong>{description}</p>\r\n            </div>\r\n            <hr/>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport {deleteReview} from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProfileReview = ({\r\n    doctorId,\r\n    review: { _id, text, name, avatar, date, user},\r\n    authUser,\r\n    deleteReview\r\n}) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"current-review\">\r\n                <div className=\"img-user\">\r\n                    <img className=\"user-pic round-img\" src={avatar} alt=\"\" />\r\n                    <h6><strong>{name}</strong></h6>\r\n                </div>\r\n                <div className=\"user-review\">\r\n                    <p>{text}</p>\r\n                    <p className=\"post-date\">\r\n                          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                    </p>\r\n                    {\r\n                        authUser.user !== null && user === authUser.user._id && (\r\n                        <button\r\n                            onClick={e => deleteReview(doctorId, _id)}\r\n                            className=\"btn btn-danger\">X</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfileReview.propTypes = {\r\n    profileId: PropTypes.number.isRequired,\r\n    review: PropTypes.object.isRequired,\r\n    authUser: PropTypes.object.isRequired,\r\n    deleteReview: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    authUser: state.authUser\r\n});\r\n\r\nexport default connect(mapStateToProps, {deleteReview})(ProfileReview);\r\n","import React, {Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addReview} from '../../actions/review';\r\n\r\nconst ReviewForm = ({ doctorId, addReview }) => {\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"text-area-style\">\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    addReview(doctorId, { text });\r\n                    setText('');\r\n                    }}>\r\n                    <textarea \r\n                        className=\"text-area\" \r\n                        name=\"text\" cols=\"30\" rows=\"5\" \r\n                        placeholder=\"Write a review\" \r\n                        required\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                    >\r\n                    </textarea>\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-secondary\" />\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nReviewForm.propTypes = {\r\n    addReview: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {addReview})(ReviewForm);\r\n","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    ADD_REVIEW,\r\n    ADD_REVIEW_ERROR,\r\n    REMOVE_REVIEW\r\n} from './types';\r\n\r\n// Add review\r\nexport const addReview = (doctorId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/profile/doctor/${doctorId}`, formData, config);\r\n        \r\n        dispatch({\r\n            type: ADD_REVIEW,\r\n            payload: res.data.review\r\n        });\r\n\r\n        dispatch(setAlert('Review Added', 'success'))\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: ADD_REVIEW_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Review\r\nexport const deleteReview = (doctorId, reviewId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/profile/doctor/${doctorId}/${reviewId}`);\r\n        dispatch({\r\n            type: REMOVE_REVIEW,\r\n            payload: reviewId\r\n        });\r\n\r\n        dispatch(setAlert('Comment removed', 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: ADD_REVIEW_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};","import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getProfileById} from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileReview from './ProfileReview';\r\nimport ReviewForm from '../profile/ReviewForm';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    profile: {profileById, loading}, authDoctor,authUser, match\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    },[getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n           {profileById === null || loading ? (\r\n               <Spinner />\r\n           ) : (\r\n               <Fragment>\r\n                    <section id=\"profile-page\">\r\n                            <div class=\"container\">\r\n                                <div class=\"current-profile\">\r\n                                    <div class=\"current-btn\">\r\n                                        <Link class=\"rounded-pill btn btn-dark\" to=\"/profiles\">Back to Profiles</Link>\r\n                                        {authUser.isUserAuthenticated ? (\r\n                                            <Fragment>\r\n                                                <Link to={`/appointment/${profileById.doctor._id}`} type=\"button\" className=\"rounded-pill btn btn-info\"><i className=\"fas fa-calendar-check\"></i> Book Appointment</Link>\r\n                                            </Fragment>\r\n                                            ) : (\r\n                                                <Fragment>\r\n                                                    <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Please Login as a User\" className=\"rounded-pill btn btn-info disabled\">\r\n                                                        <i className=\"fas fa-calendar-check\"></i> Book Appointment\r\n                                                    </a>\r\n                                                </Fragment>\r\n                                            )\r\n                                        }\r\n                                        {authDoctor.isDoctorAuthenticated && \r\n                                            authDoctor.loadingDoctor === false && \r\n                                            authDoctor.doctor._id === profileById.doctor._id && (\r\n                                                <Link to='/edit-profile' className='rounded-pill btn btn-secondary'>\r\n                                                    <i class=\"fas fa-edit\"></i>\r\n                                                </Link>\r\n                                        )}\r\n                                    </div>\r\n                                    <ProfileTop profile={profileById} />\r\n                                    <ProfileAbout profile={profileById} />\r\n                                    <div className=\"exp-edu\">\r\n                                        <div className=\"exp-bottom\">\r\n                                            <h2 className=\"exp-common-heading\">Experience</h2>\r\n                                            {profileById.experience.length > 0 ? (\r\n                                                    <Fragment>\r\n                                                        {profileById.experience.map(experience => (\r\n                                                            <ProfileExperience key={experience._id} experience={experience} />\r\n                                                        ))}\r\n                                                    </Fragment>\r\n                                                ) : (\r\n                                                    <h4>No Experience credentials</h4>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"edu-bottom\">\r\n                                            <h2 className=\"exp-common-heading\">Education</h2>\r\n                                            {profileById.education.length > 0 ? (\r\n                                                    <Fragment>\r\n                                                        {profileById.education.map(education => (\r\n                                                            <ProfileEducation key={education._id} education={education} />\r\n                                                        ))}\r\n                                                    </Fragment>\r\n                                                ) : (\r\n                                                    <h4>No education credentials</h4>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"patient-review\">\r\n                                            <h2 class=\"exp-common-heading\">Patient Reviews</h2> \r\n                                            { authUser.isUserAuthenticated ? \r\n                                                (\r\n                                                   <ReviewForm doctorId={profileById.doctor._id} /> \r\n                                                ) : \"\"\r\n                                            }\r\n                                            {\r\n                                                profileById.review.map(rev => (\r\n                                                    <ProfileReview key={rev._id} review={rev} doctorId={match.params.id} />\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                    </section>\r\n               </Fragment>\r\n           )} \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    authDoctor: PropTypes.object.isRequired,\r\n    authUser: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    authDoctor: state.authDoctor,\r\n    authUser: state.authUser\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfileById})(Profile);\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst PrivateDoctorRoute = ({component: Component, \r\n    authDoctor: {isDoctorAuthenticated, loadingDoctor},\r\n    ...rest}) => (\r\n        <Route\r\n            {...rest}\r\n            render = {props =>     \r\n                !isDoctorAuthenticated && !loadingDoctor ? (\r\n                    <Redirect to=\"/loginDoctor\" />\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            }\r\n        />\r\n);\r\n\r\nPrivateDoctorRoute.propTypes = {\r\n    authDoctor: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    authDoctor: state.authDoctor\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateDoctorRoute);\r\n","import React, { Fragment } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport {deleteAppointment} from '../../actions/appointment';\r\n\r\nconst AppointmentItems = ({\r\n        appointment, deleteAppointment,\r\n    }) => {\r\n    \r\n    const appointments = appointment.map(appnt => (\r\n        <div key={appnt.id} className=\"profile-1\">\r\n            <div className=\"profile-img\">\r\n                <Link to={`/doctor/${appnt.doctor}`}>\r\n                    <img src={appnt.avatar} alt=\"\" />\r\n                </Link>\r\n                <h5 className=\"heading-sub\"><strong>{appnt.name}</strong></h5>\r\n            </div>\r\n            <div className=\"profile-details\">\r\n                <div className=\"appointment-p profile-desc\">\r\n                    <h2 className=\"profile-heading\"><strong>{appnt.patientname}</strong></h2>\r\n                    <p className=\"profile-p\"><strong>Father's name: {appnt.fathername}</strong></p>\r\n                    <p className=\"profile-p2\"><strong>Age: </strong>{appnt.age}</p>\r\n                    <p className=\"profile-p2\"><strong>Status: </strong>{appnt.status}</p>\r\n                    <p className=\"profile-p2\"><strong>Date: </strong><Moment format='DD/MM/YYYY'>{appnt.date}</Moment></p>\r\n                    <p className=\"profile-p2\"><strong>Booking ID: </strong>{appnt.bookingId}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"desc-p\">\r\n                <p className=\"profile-p2\"><strong>Description: </strong>{appnt.description}</p>\r\n                <button onClick={() => deleteAppointment(appnt._id)} type=\"button\" className=\"profile-btn btn btn-danger\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    ));\r\n    return (\r\n        <Fragment>\r\n            {appointments}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAppointmentItems.propTypes = {\r\n    appointment: PropTypes.array.isRequired,\r\n    deleteAppointment: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteAppointment})(AppointmentItems);\r\n","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_APPOINTMENTS,\r\n    ADD_APPOINTMENTS,\r\n    UPDATE_APPOINTMENTS,\r\n    APPOINTMENT_ERROR,\r\n    DELETE_USER_ACCOUNT\r\n} from './types';\r\n\r\n// Get Appointments\r\nexport const getAppointments = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/authUser');\r\n        dispatch({\r\n            type: GET_APPOINTMENTS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: APPOINTMENT_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    };\r\n};\r\n\r\n// Add appointment\r\nexport const addAppointment = (doctorId, formData, history) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/appointment/${doctorId}`,formData, config);\r\n        dispatch({\r\n            type: ADD_APPOINTMENTS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Appointment booked', 'success'));\r\n        history.push('/appointment');\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: APPOINTMENT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Delete appointment\r\nexport const deleteAppointment = (appointmentId) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/authUser/${appointmentId}`);\r\n        dispatch({\r\n            type: UPDATE_APPOINTMENTS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Appointment removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: APPOINTMENT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Delete user account\r\nexport const deleteAccountUser = () => async dispatch => {\r\n    if(window.confirm('Are you sure? this can not be undone!')) {\r\n        try {\r\n            await axios.delete('/api/authUser');\r\n\r\n            dispatch({\r\n                type: DELETE_USER_ACCOUNT\r\n            });\r\n\r\n            dispatch(setAlert(\"Your account has been removed\", 'success'));\r\n        } catch (err) {\r\n            dispatch ({\r\n                type: APPOINTMENT_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Dots} from 'react-preloaders';\r\nimport AppointmentItems from './AppointmentItems';\r\nimport {getAppointments, deleteAccountUser} from '../../actions/appointment';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\nconst Appointments = ({\r\n    getAppointments, \r\n    deleteAccountUser,\r\n    authUser: {user},\r\n    appointment: {appointments, loading}\r\n}) => { \r\n\r\n    DarkTopLoaderBar();\r\n    useEffect(() => {\r\n        getAppointments();\r\n    }, [getAppointments])\r\n\r\n    return (\r\n        <Fragment>\r\n            { loading && appointments !== null ? <Spinner /> : \r\n                <Fragment>\r\n                    {topbar.show()}\r\n                    <section id=\"dashboard\">\r\n                        <div class=\"container\">\r\n                            <div class=\"heading-common\">\r\n                                <h1><strong>Appointments</strong></h1>  \r\n                                <h2 class=\"welcome-heading\"><i class=\"fas fa-calendar-check\"></i>{' '}\r\n                                    {user && (user.name.split(' ')[0].toLocaleUpperCase())}'s appointments</h2>\r\n                                <div className=\"mt-3\" style={{display:\"flex\", justifyContent:\"flex-end\"}}>\r\n                                    <button className=\"btn btn-danger\" onClick={() => deleteAccountUser()}>\r\n                                        <i className=\"fas fa-user-minus\"></i>\r\n                                            Delete My Account\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"common-details\">\r\n                                <br />\r\n                                {appointments !== null && appointments.appointments.length !== 0 ? (\r\n                                    <div class=\"profiles\">\r\n                                            <Fragment>\r\n                                                <AppointmentItems appointment={appointments.appointments} />\r\n                                            </Fragment>\r\n                                    </div>\r\n                                ) : (\r\n                                        <h4 style={{color:\"#738f93\"}}>No Appointments found...</h4>\r\n                                    )   \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    {topbar.hide()}\r\n                </Fragment> \r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAppointments.propTypes = {\r\n    getAppointments: PropTypes.func.isRequired,\r\n    deleteAccountUser: PropTypes.func.isRequired,\r\n    authUser: PropTypes.object.isRequired,\r\n    appointment: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authUser: state.authUser,\r\n    appointment: state.appointment\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAppointments, deleteAccountUser})(Appointments);\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addAppointment} from '../../actions/appointment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Form = ({profile, doctorId,history, addAppointment}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        patientname: '',\r\n        fathername: '',\r\n        age:'',\r\n        status:'',\r\n        date:'',\r\n        description:''\r\n    });   \r\n\r\n    const {\r\n        patientname,\r\n        fathername,\r\n        age,\r\n        status,\r\n        date,\r\n        description\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({\r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    return (\r\n        <Fragment>\r\n        <br />\r\n            <div className=\"heading-common\">\r\n                <h1><strong>Book Appointment</strong>\r\n                </h1>  \r\n                <p className=\"lead\">\r\n                    Provide your details correctly and book your appointment.\r\n                </p>\r\n            <div className=\"appointment-doctor\">\r\n                <img className=\"round-img appointment-img\" src={profile.avatar} alt=\"\" />\r\n                <p className=\"lead\"><strong>{profile.name}</strong></p>\r\n            </div>\r\n            </div>\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                addAppointment(doctorId, formData, history);  \r\n            }}>\r\n                <small>* = required field</small>\r\n                <div className=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"* Patient name\"\r\n                    name=\"patientname\"\r\n                    value={patientname}\r\n                    onChange={e => onChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"* Father name\"\r\n                    name=\"fathername\" \r\n                    value={fathername} \r\n                    onChange={e => onChange(e)} />\r\n                </div>                    \r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"* Age\"\r\n                        name=\"age\" \r\n                        value={age} \r\n                        onChange={e => onChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"* Status\"\r\n                        name=\"status\" \r\n                        value={status} \r\n                        onChange={e => onChange(e)} />\r\n                        <small className=\"form-text\">Status like profession (eg. student, job etc)</small>\r\n                    </div>\r\n                    <h6>Date</h6>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        type=\"date\" \r\n                        className=\"form-control\" \r\n                        name=\"date\" \r\n                        value={date}\r\n                        onChange={e => onChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        className=\"form-control\" \r\n                        placeholder=\"* Health Problem Description\" \r\n                        name=\"description\" \r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n                        ></textarea>\r\n                    <small className=\"form-text\">Tell us about the Health Problem.</small>\r\n                </div>\r\n                <input type=\"submit\" value=\"Submit\" className=\"btn btn-info\" />{' '}\r\n                <Link to=\"/profiles\" type=\"submit\" className=\"btn btn-outline-secondary\">Go Back</Link>\r\n            </form>\r\n            <br />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nForm.propTypes = {\r\n    addAppointment: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addAppointment})(Form);\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getProfileById} from '../../actions/profile';\r\nimport Form from './Form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport topbar from 'topbar';\r\nimport DarkTopLoaderBar from '../../topbar/topbar';\r\n\r\nconst AppointmentForm = ({\r\n    getProfileById,\r\n    profile: {profileById},\r\n    match,\r\n    history\r\n}) => {\r\n\r\n    DarkTopLoaderBar();\r\n\r\n    useEffect(() => {\r\n        getProfileById(match.params.id)\r\n    },[getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {topbar.show()}\r\n            <section id=\"Login\">\r\n                <div className=\"container\">\r\n                    <div className=\"common-form\">\r\n                        <div className=\"form-side\">\r\n                            {\r\n                                profileById !== null ? \r\n                                (\r\n                                    <Form profile={profileById.doctor} history={history} doctorId={profileById.doctor._id} />\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"img-side\">\r\n                            <img src={require(\"../../img/calendar.svg\")} alt=\"\" className=\"register-user\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {topbar.hide()}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nAppointmentForm.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfileById})(withRouter(AppointmentForm));\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst PrivateUserRoute = ({component: Component, \r\n    authUser: {isUserAuthenticated, loadingUser},\r\n    ...rest}) => (\r\n        <Route\r\n            {...rest}\r\n            render = {props =>     \r\n                !isUserAuthenticated && !loadingUser ? (\r\n                    <Redirect to=\"/loginUser\" />\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            }\r\n        />\r\n);\r\n\r\nPrivateUserRoute.propTypes = {\r\n    authUser: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    authUser: state.authUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateUserRoute);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function( state = initialState, action) {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    REGISTER_DOCTOR_SUCCESS,\r\n    REGISTER_DOCTOR_FAIL,\r\n    DOCTOR_LOADED,\r\n    AUTH_DOCTOR_ERROR,\r\n    LOGIN_DOCTOR_SUCCESS,\r\n    LOGIN_DOCTOR_FAIL,\r\n    LOGOUT_DOCTOR,\r\n    DELETE_ACCOUNT\r\n    \r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isDoctorAuthenticated: null,\r\n    loadingDoctor: true,\r\n    doctor: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case DOCTOR_LOADED:\r\n            return {\r\n                ...state,\r\n                isDoctorAuthenticated: true,\r\n                loadingDoctor: false,\r\n                doctor: payload\r\n            };\r\n        case REGISTER_DOCTOR_SUCCESS:            \r\n        case LOGIN_DOCTOR_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isDoctorAuthenticated: true,\r\n                loadingDoctor: false\r\n            };\r\n        case REGISTER_DOCTOR_FAIL:\r\n        case LOGIN_DOCTOR_FAIL:\r\n        case DELETE_ACCOUNT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isDoctorAuthenticated: false,\r\n                loadingDoctor: false\r\n            }; \r\n        case LOGOUT_DOCTOR:\r\n        case AUTH_DOCTOR_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isDoctorAuthenticated: false,\r\n                loadingDoctor: false\r\n            };         \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_USER_ERROR,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAIL,\r\n    LOGOUT_USER,\r\n    DELETE_USER_ACCOUNT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isUserAuthenticated: null,\r\n    loadingUser: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isUserAuthenticated: true,\r\n                loadingUser: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_USER_SUCCESS:            \r\n        case LOGIN_USER_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isUserAuthenticated: true,\r\n                loadingUser: false\r\n            };\r\n        case REGISTER_USER_FAIL:\r\n        case LOGIN_USER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isUserAuthenticated: false,\r\n                loadingUser: false\r\n            }; \r\n        case AUTH_USER_ERROR:\r\n        case LOGOUT_USER:\r\n        case DELETE_USER_ACCOUNT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isUserAuthenticated: false,\r\n                loadingUser: false\r\n            };    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_PROFILE,\r\n    GET_PROFILE_BY_ID,\r\n    GET_PROFILES,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    ADD_REVIEW,\r\n    ADD_REVIEW_ERROR,\r\n    REMOVE_REVIEW\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    profileById: null,\r\n    profile: null,\r\n    profiles: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function( state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n        case GET_PROFILE_BY_ID:\r\n            return {\r\n                ...state,\r\n                profileById: payload,\r\n                loading: false\r\n            };\r\n        \r\n        case ADD_REVIEW: \r\n            return {\r\n                ...state,\r\n                profileById: { ...state.profileById, review: payload },\r\n                loading: false   \r\n            };\r\n        case REMOVE_REVIEW:\r\n            return {\r\n                ...state,\r\n                profileById: {\r\n                    ...state.profileById,\r\n                    review: state.profileById.review.filter(comment => comment._id !== payload)\r\n                },\r\n                loading: false\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n        case PROFILE_ERROR:\r\n        case ADD_REVIEW_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                loading: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_APPOINTMENTS,\r\n    ADD_APPOINTMENTS,\r\n    UPDATE_APPOINTMENTS,\r\n    APPOINTMENT_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initalState = {\r\n    appointments: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state=initalState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case GET_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                appointments: payload,\r\n                loading: false\r\n            };\r\n        case ADD_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                appointments: payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_APPOINTMENTS:\r\n            return {\r\n                ...state,\r\n                appointments: payload,\r\n                loading: false\r\n            }\r\n        case APPOINTMENT_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport alert from './alert';\r\nimport authDoctor from './authDoctor';\r\nimport authUser from './authUser';\r\nimport profile from './profile';\r\nimport appointment from './appointment';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    authDoctor,\r\n    authUser,\r\n    profile,\r\n    appointment\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\r\n\r\nexport default store;","import React, { useEffect, Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport LoginUser from \"./components/auth/LoginUser\";\r\nimport LoginDoctor from \"./components/auth/LoginDoctor\";\r\nimport DoctorRegister from \"./components/auth/DoctorRegister\";\r\nimport UserRegister from \"./components/auth/UserRegister\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport AddEducation from \"./components/profile-forms/AddEducation\";\r\nimport AddExperience from \"./components/profile-forms/AddExperience\";\r\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\r\nimport EditProfile from \"./components/profile-forms/EditProfile\";\r\nimport Profiles from \"./components/profiles/Profiles\";\r\nimport Profile from \"./components/profile/Profile\";\r\nimport PrivateDoctorRoute from \"./components/routing/PrivateDoctorRoute\";\r\nimport Appointment from \"./components/user/Appointments\";\r\nimport AppointmentForm from \"./components/bookappointment/AppointmentForm\";\r\nimport PrivateUserRoute from \"./components/routing/PrivateUserRoute\";\r\nimport \"./App.css\";\r\n\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/authUser\";\r\nimport { loadDoctor } from \"./actions/authDoctor\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { ReactNotifications } from \"react-notifications-component\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n    store.dispatch(loadDoctor());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <div>\r\n                \r\n                    <ReactNotifications />\r\n\r\n            </div>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n         \r\n          <Route exact path=\"/\" component={Landing} />\r\n          <div className=\"container\">\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path=\"/loginUser\" component={LoginUser} />\r\n              <Route exact path=\"/loginDoctor\" component={LoginDoctor} />\r\n              <Route exact path=\"/registerDoctor\" component={DoctorRegister} />\r\n              <Route exact path=\"/registerUser\" component={UserRegister} />\r\n              <Route exact path=\"/profiles\" component={Profiles} />\r\n              <Route exact path=\"/doctor/:id\" component={Profile} />\r\n              <PrivateDoctorRoute\r\n                exact\r\n                path=\"/dashboard\"\r\n                component={Dashboard}\r\n                />\r\n              <PrivateDoctorRoute\r\n                exact\r\n                path=\"/add-education\"\r\n                component={AddEducation}\r\n                />\r\n              <PrivateDoctorRoute\r\n                exact\r\n                path=\"/add-experience\"\r\n                component={AddExperience}\r\n                />\r\n              <PrivateDoctorRoute\r\n                exact\r\n                path=\"/create-profile\"\r\n                component={CreateProfile}\r\n                />\r\n              <PrivateDoctorRoute\r\n                exact\r\n                path=\"/edit-profile\"\r\n                component={EditProfile}\r\n                />\r\n              <PrivateUserRoute\r\n                exact\r\n                path=\"/appointment\"\r\n                component={Appointment}\r\n                />\r\n              <PrivateUserRoute\r\n                exact\r\n                path=\"/appointment/:id\"\r\n                component={AppointmentForm}\r\n                />\r\n                    <footermain />\r\n            </Switch>\r\n          </div>\r\n        \r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n    \r\n                </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { ReactNotifications } from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     \r\n    <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/doctor (1).02c2292d.png\";","module.exports = __webpack_public_path__ + \"static/media/mention.21ba4978.svg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.f90bc471.gif\";"],"sourceRoot":""}